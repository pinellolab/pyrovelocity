name: "Setup Environment"
description: "Shared steps to setup the environment for CI jobs"

inputs:
  python_version:
    description: "Python version to setup"
    required: true
  debug_enabled:
    description: "Run with tmate.io debugging enabled"
    required: true
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38 # ratchet:actions/setup-python@v5.4.0
      with:
        python-version: ${{ inputs.python_version }}
    - name: Install system dependencies
      shell: bash
      run: |
        echo "install system dependencies"
        # sudo apt-get update
        # sudo apt-get install -y tree
    - uses: r-lib/actions/setup-pandoc@14a7e741c1cb130261263aa1593718ba42cf443b # ratchet:r-lib/actions/setup-pandoc@v2
      with:
        pandoc-version: "3.1.11"
    - name: Install Poetry
      uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # ratchet:snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@d4323d4df104b026a6aa633fdb11d772146be0bf # ratchet:actions/cache@v4.2.2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      shell: bash
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --with docs,lint,test,workflows --no-interaction --no-root
    - name: Install project
      shell: bash
      run: poetry install --with docs,lint,test,workflows --no-interaction
    - name: "Setup tmate debug session"
      uses: mxschmitt/action-tmate@e5c7151931ca95bad1c6f4190c730ecf8c7dde48 # ratchet:mxschmitt/action-tmate@v3
      if: ${{ inputs.debug_enabled == 'true' }}
