---
title: Parameter Recovery Validation
toc: true
number-sections: true
highlight-style: gruvbox
csl: ../../bibstyle.csl
lightbox: auto
format:
  html:
    html-math-method: mathjax
    include-in-header: ../../mathjax.html
format-links: [ipynb]
execute:
  freeze: true
  eval: true
  warning: false
  error: false
  cache: true
author:
  - name: Pyrovelocity Team
    email: team@pyrovelocity.net
abstract: |
  This notebook demonstrates parameter recovery validation for PyroVelocity models using dimensionless models.
  We progress from analytically tractable models where the temporal coordinate is an observed variable toward the more complicated situation of models with latent variables that represent temporal ordering and must therefore be inferred.
  We focus on constructing models that naturally avoid identifiability issues while maintaining biological interpretability,
  using hierarchical priors on characteristic scales and simple accounting of technical artifacts through effective parameters that aggregate sources of error.
  We illustrate how to systematically validate that probabilistic models can recover
  known parameters from synthetic data, which is essential before applying models
  to real-world data where true parameter values are unknown.
keywords: [single-cell transcriptomics, probabilistic modeling, model calibration, model validation, RNA velocity]
bibliography: ../../references.bib
jupyter:
  jupytext:
    cell_metadata_filter: all
    cell_metadata_json: true
    notebook_metadata_filter: all
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: 1.0
      jupytext_version: 1.16.0
  kernelspec:
    display_name: Python 3
    language: python
    name: python3
  language_info:
    name: python
  rise:
    scroll: true
    theme: black
  toc-autonumbering: true
  toc-showcode: false
  toc-showmarkdowntxt: false
---

## Introduction

Parameter recovery validation is a critical step in validating probabilistic models before applying them to real data. This process involves:

1. **Generating synthetic data** using known parameter values
2. **Running inference** to recover parameters from the synthetic data
3. **Evaluating recovery performance**
4. **Assessing model identifiability**

This notebook demonstrates parameter recovery validation for PyroVelocity models using the dimensionless parameterization that naturally avoids identifiability issues while maintaining biological interpretability. We implement hierarchical priors on characteristic scales and lumped effective capture efficiency, progressing from analytical solutions with observed time to numerical simulation with latent time coordinates. For each model we include a graphical representation of the model's generative process as well as a mathematical description of the prior, observation model, and likelihood. We illustrate how to perform a somewhat simplified version of prior and posterior predictive checking for the piecewise activation model with latent time.

## Model Development

We work through a progression of **dimensionless models** that naturally avoid or aim to avoid identifiability issues while maintaining biological interpretability. Each model builds complexity while preserving the core dimensionless parameterization.

### Dimensionless Analytical Dynamics with Observed Time

This model uses the direct dimensionless approach with analytical solutions:

- **Time coordinates**: Observed dimensionless time $t^*_j$
- **Dynamics**: Analytical dimensionless transcription-splicing-degradation solutions
- **Parameters**: $\gamma^*_i$ (relative degradation), $U_{0i}$ (characteristic scale), $\lambda_j$ (lumped capture efficiency)
- **Prior**: Log-normal hierarchical priors for all parameters
- **Observation Model**: Poisson counts scaled by characteristic scales and capture efficiency
- **Likelihood**: Poisson product distribution
- **Identifiability**: Naturally identifiable through dimensionless parameterization

### Dimensionless Analytical Dynamics with Latent Time and Piecewise Activation

This model extends the latent time framework with piecewise constant transcription rates:

- **Time coordinates**: Independent latent $t^*_j$ coordinates sampled uniformly within process duration $T_{\max}$
- **Dynamics**: Piecewise constant transcription with three phases (off, on, return-to-off)
- **Parameters**: $\gamma^*_i$, $R_{\text{on},i}$ (fold-change), $t^*_{0,\text{on}i}$ (onset), $\delta^*_i$ (duration), with independent temporal structure
- **Key innovation**: Fixed reference state ($\alpha^*_{\text{off}i} = 1.0$) eliminates parameter redundancy
- **Enhanced patterns**: Supports pre-activation scenarios with negative onset times
- **Analytical solutions**: Closed-form solutions for all three phases, including $\gamma^*_i = 1$ special case
- **Biological realism**: Steady-state initial conditions and rich expression pattern representation
- **Observation Model**: Same Poisson scaling with characteristic scales and capture efficiency
- **Likelihood**: Poisson

## Dimensionless analytical dynamics with observed time {#sec-dimless-observed-time}

This validation study focuses on the **direct dimensionless approach** that naturally avoids identifiability issues while maintaining biological interpretability. We follow the theoretical foundation from our [Probabilistic inference in dynamical systems](../inferenceindynamicalsystems/index.qmd) concept guide, implementing hierarchical priors on characteristic scales and lumped effective capture efficiency.

### Model Description

We model the transcription-splicing-degradation system using the **direct dimensionless approach** that naturally avoids identifiability issues while maintaining biological interpretability. This approach fits the dimensionless model directly with hierarchical priors on characteristic scales, eliminating the need for post-estimation rescaling procedures.

The model generates count data for unspliced ($u$) and spliced ($s$) RNA molecules per cell, with dynamics governed by the dimensionless analytical solutions and observation model that scales back to dimensional counts through characteristic scales and effective capture efficiency.

### Probabilistic Graphical Model

The probabilistic graphical model represents the dimensionless transcription-splicing-degradation system with hierarchical priors on characteristic scales and lumped effective capture efficiency. The model directly fits dimensionless parameters while maintaining biological interpretability through characteristic scales.

```{python}
#| label: fig-count-model-pgm
#| code-fold: true
#| fig-cap: Probabilistic graphical model for the dimensionless transcription-splicing-degradation model with hierarchical priors on characteristic scales and lumped effective capture efficiency.

import daft
import matplotlib.pyplot as plt

plt.rcParams["font.family"] = "serif"
plt.rcParams["font.size"] = 16
plt.rcParams["text.usetex"] = True

pgm = daft.PGM(line_width=1.2)

# hyperparameters
pgm.add_node("mu_init", r"$\mu_{0}$", 0.5, 6, fixed=True)
pgm.add_node("sigma_init", r"$\sigma_{0}^2$", 1.5, 6, fixed=True)
pgm.add_node("mu_gamma", r"$\mu_{\gamma^*}$", 2.5, 6, fixed=True)
pgm.add_node("sigma_gamma", r"$\sigma_{\gamma^*}^2$", 3.5, 6, fixed=True)
pgm.add_node("mu_U0", r"$\mu_{U_0}$", 4.5, 6, fixed=True)
pgm.add_node("sigma_U0", r"$\sigma_{U_0}^2$", 5, 6, fixed=True)
pgm.add_node("mu_lambda", r"$\mu_{\lambda}$", 5.5, 5, fixed=True)
pgm.add_node("sigma_lambda", r"$\sigma_{\lambda}^2$", 6, 5, fixed=True)

# latent variables for gene-specific parameters
pgm.add_node("u_star_0i", r"$u^{\ast}_{0i}$", 1, 5)
pgm.add_node("s_star_0i", r"$s^{\ast}_{0i}$", 2, 5)
pgm.add_node("gamma_star_i", r"$\gamma^{\ast}_i$", 3, 5)
pgm.add_node("U_0i", r"$U_{0i}$", 4.5, 5)

# cell-specific parameters (moved inside cell plate)
pgm.add_node("lambda_j", r"$\lambda_j$", 5.5, 4)

# latent variables for cell-specific outcomes
pgm.add_node(
    "u_star_ij",
    r"$u^{\ast}_{ij}$",
    2,
    4,
    scale=1.0,
    shape="rectangle",
)
pgm.add_node(
    "s_star_ij",
    r"$s^{\ast}_{ij}$",
    4,
    4,
    scale=1.0,
    shape="rectangle",
)

# observed data
pgm.add_node(
    "t_star_j",
    r"$t^{\ast}_j$",
    5.5,
    3.0,
    observed=True,
    shape="rectangle",
)
pgm.add_node(
    "u_obs_ij",
    r"$u_{ij}$",
    2,
    2.5,
    scale=1.0,
    observed=True,
)
pgm.add_node(
    "s_obs_ij",
    r"$s_{ij}$",
    4,
    2.5,
    scale=1.0,
    observed=True,
)

# edges
edge_params = {"head_length": 0.3, "head_width": 0.25, "lw": 0.7}
pgm.add_edge("mu_init", "u_star_0i", plot_params=edge_params)
pgm.add_edge("sigma_init", "u_star_0i", plot_params=edge_params)
pgm.add_edge("mu_init", "s_star_0i", plot_params=edge_params)
pgm.add_edge("sigma_init", "s_star_0i", plot_params=edge_params)
pgm.add_edge("mu_gamma", "gamma_star_i", plot_params=edge_params)
pgm.add_edge("sigma_gamma", "gamma_star_i", plot_params=edge_params)
pgm.add_edge("mu_U0", "U_0i", plot_params=edge_params)
pgm.add_edge("sigma_U0", "U_0i", plot_params=edge_params)
pgm.add_edge("mu_lambda", "lambda_j", plot_params=edge_params)
pgm.add_edge("sigma_lambda", "lambda_j", plot_params=edge_params)

pgm.add_edge("u_star_0i", "u_star_ij", plot_params=edge_params)
pgm.add_edge("s_star_0i", "s_star_ij", plot_params=edge_params)
pgm.add_edge("u_star_0i", "s_star_ij", plot_params=edge_params)
pgm.add_edge("gamma_star_i", "s_star_ij", plot_params=edge_params)

pgm.add_edge("u_star_ij", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("s_star_ij", "s_obs_ij", plot_params=edge_params)
pgm.add_edge("U_0i", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("U_0i", "s_obs_ij", plot_params=edge_params)
pgm.add_edge("lambda_j", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("lambda_j", "s_obs_ij", plot_params=edge_params)

pgm.add_edge("t_star_j", "u_star_ij", plot_params=edge_params)
pgm.add_edge("t_star_j", "s_star_ij", plot_params=edge_params)

# plates
pgm.add_plate(
    [0.5, 1.4, 4.5, 4.2],
    label=r"$i \in \{1, \ldots, G\}$",
    shift=-0.1,
    fontsize=12,
)
pgm.add_plate(
    [1.0, 1.9, 5.0, 2.6],
    label=r"$j \in \{1, \ldots, N\}$",
    shift=-0.1,
    fontsize=12,
)

pgm.render()
```

### Mathematical Description

The model is defined by the following hierarchical structure using the **direct dimensionless approach**:

**Priors for dimensionless initial conditions:**
\begin{align}
    u^*_{0i}, s^*_{0i} &\sim \text{LogNormal}(\mu_{0}, \sigma_{0}^2) \label{eq-dimless-init-conds-priors}
\end{align}

**Priors for dimensionless kinetic parameters:**
\begin{align}
    \gamma^*_i &\sim \text{LogNormal}(\mu_{\gamma^*}, \sigma_{\gamma^*}^2) \label{eq-gamma-star-prior}
\end{align}

where $\gamma^*_i = \gamma_i / \beta_i$ is the relative degradation rate for gene $i$.

**Priors for characteristic scales:**
\begin{align}
    U_{0i} &\sim \text{LogNormal}(\mu_{U_0}, \sigma_{U_0}^2) \label{eq-U0-prior}
\end{align}

where $U_{0i} = \alpha_i / \beta_i$ is the characteristic concentration scale for gene $i$.

**Priors for effective capture efficiency:**
\begin{align}
    \lambda_j &\sim \text{LogNormal}(\mu_{\lambda}, \sigma_{\lambda}^2) \label{eq-lambda-prior}
\end{align}

where $\lambda_j$ represents the **lumped effective capture efficiency** for cell $j$.

**Dimensionless differential equations:**
The system is governed by the dimensionless equations:
\begin{align}
    \frac{du^*}{dt^*} &= 1 - u^* \label{eq-dimless-u-ode}, \\
    \frac{ds^*}{dt^*} &= u^* - \gamma^* s^* \label{eq-dimless-s-ode}
\end{align}

where $t^* = \beta t$, $u^* = u/U_0$, $s^* = s/U_0$, and $\gamma^* = \gamma/\beta$.

**Analytical solutions:**
Given dimensionless initial conditions $u^*_{0i}, s^*_{0i}$ at time $t^*_0 = 0$, we define the helper variable:
\begin{align}
    \xi_i &= \frac{u^*_{0i} - 1}{\gamma^*_i - 1} \label{eq-xi-helper}
\end{align}

The complete solutions are:

\begin{align}
    u^*_{ij} &= 1 + (u^*_{0i} - 1) e^{-t^*_j} \\
    {s^{\ast}}^{k}_{ij} &= 
      \begin{cases}
        \frac{1}{\gamma^{\ast}_i} + 
        \left( s^{\ast}_{0i} - \xi_i - \frac{1}{\gamma^{\ast}_i} \right) \cdot e^{-\gamma^{\ast}_i {t^{\ast}}^k_j} + 
        \xi_i \cdot e^{-{t^{\ast}}^k_j},& \gamma^{\ast}_i \neq 1 \\

        1 + (s^{\ast}_{0i} - 1) e^{-{t^{\ast}}^k_j} + 
          (u^{\ast}_{0i} - 1) {t^{\ast}}^k_j e^{-{t^{\ast}}^k_j},& \gamma^{\ast}_i = 1 \\
      \end{cases}, \label{eq-s-star-model-cell}
\end{align}

**Poisson observation model with characteristic scaling:**
\begin{align}
    u_{ij} &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot u^*_{ij}) \label{eq-dimless-u-obs-poisson}, \\
    s_{ij} &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot s^*_{ij}) \label{eq-dimless-s-obs-poisson}
\end{align}

where:

- $i \in \{1, \ldots, G\}$ indexes genes
- $j \in \{1, \ldots, N\}$ indexes cells
- $t^*_j$ are observed dimensionless time coordinates for each cell
- $u^*_{0i}, s^*_{0i}$ are dimensionless initial conditions for each gene
- $u^*_{ij}, s^*_{ij}$ are the latent dimensionless RNA concentrations
- $U_{0i}$ is the characteristic concentration scale for gene $i$
- $\lambda_j$ is the lumped effective capture efficiency for cell $j$

### Parameter Interpretability

The dimensionless approach provides **natural identifiability** and **clear biological interpretation** for all inferred parameters:

#### **Core Dimensionless Parameters (Gene-Specific)**

**$\gamma^*_i$ (Relative degradation rate)**

- **Definition**: $\gamma^*_i = \gamma_i / \beta_i$
- **Interpretation**: How fast mRNA degrades relative to how fast pre-mRNA gets spliced
- **Biological meaning**:
  - $\gamma^*_i < 1$: mRNA is more stable than pre-mRNA processing time
  - $\gamma^*_i = 1$: mRNA degradation matches splicing timescale (special case)
  - $\gamma^*_i > 1$: mRNA degrades faster than splicing occurs
- **Special case**: When $\gamma^*_i = 1$, the analytical solution has a different form with a $t^*_j e^{-t^*_j}$ term
- **Helper variable**: $\xi_i = \frac{u^*_{0i} - 1}{\gamma^*_i - 1}$ (undefined when $\gamma^*_i = 1$)
- **Example**: $\gamma^*_i = 0.5$ means mRNA half-life is twice as long as the characteristic splicing time

#### **Characteristic Scales (Gene-Specific)**

**$U_{0i}$ (Characteristic concentration scale)**

- **Definition**: $U_{0i} = \alpha_i / \beta_i$
- **Units**: molecules/cell
- **Interpretation**: The steady-state pre-mRNA level that would be reached if there were no degradation
- **Biological meaning**: Represents the gene's "expression capacity" - how many molecules it can produce per splicing timescale
- **Example**: $U_{0i} = 100$ molecules/cell means this gene's transcription-splicing balance produces ~100 molecules per characteristic time

#### **Effective Capture Efficiency (Cell-Specific)**

**$\lambda_j$ (Lumped effective capture efficiency)**

- **Definition**: Cell-specific composite technical efficiency
- **Units**: Dimensionless (positive real number)
- **Interpretation**: Overall efficiency of detecting RNA molecules in cell $j$
- **Technical factors lumped together**:
  1. **True capture efficiency**: Fraction of molecules actually captured during library prep
  2. **Library size effects**: Total sequencing depth for this cell
  3. **Batch effects**: Systematic differences between experimental batches
  4. **Cell quality**: Cell viability, membrane integrity, RNA degradation
  5. **Ambient RNA**: Background contamination (modeled as scaling factor)
  6. **Technical dropout**: Stochastic detection failures
- **Example**: $\lambda_j = 0.5$ indicates this cell has 50% of the expected detection efficiency compared to a "reference" cell

#### **Derived Biological Quantities**

From the inferred parameters, you can reconstruct the original dimensional parameters:

**$\alpha_i$ (Transcription rate)**

- **Formula**: $\alpha_i = U_{0i} / T_{0i}$ (where $T_{0i} = 1/\beta_i$ is inferred from time scale)
- **Units**: molecules/(cell·hour)
- **Interpretation**: How many pre-mRNA molecules are transcribed per hour

**$\beta_i$ (Splicing rate)**

- **Formula**: $\beta_i = 1 / T_{0i}$ (from dimensionless time scale)
- **Units**: hour⁻¹
- **Interpretation**: Splicing rate constant

**$\gamma_i$ (Degradation rate)**

- **Formula**: $\gamma_i = \gamma^*_i \cdot \beta_i$
- **Units**: hour⁻¹
- **Interpretation**: mRNA degradation rate constant

### Justification for Parameterization

This parameterization is designed to optimally account for identifiability and known biological/technical considerations:

#### **Natural Identifiability**

- **Dimensionless approach**: Eliminates scaling symmetries inherent in dimensional models
- **No post-estimation rescaling**: Parameters are naturally identifiable during inference
- **Hierarchical priors**: Provide regularization without breaking identifiability

#### **Biological Interpretability**

- **$\gamma^*_i$**: Directly interpretable relative degradation rate
- **$U_{0i}$**: Gene expression capacity with clear biological meaning
- **Dimensionless solutions**: Universal dynamics independent of absolute scales

#### **Technical Factor Management**

- **Strategic lumping**: $\lambda_j$ captures multiple technical effects without overparameterization
- **Computational efficiency**: Fewer parameters than separate modeling of each technical factor
- **Robustness**: Works across different experimental protocols and platforms

#### **Connection to Established Theory**

- **Dimensional analysis**: Follows Buckingham π theorem for parameter reduction
- **RNA velocity theory**: Maintains connection to established dynamical systems approach
- **Single-cell best practices**: Accounts for known technical factors in scRNA-seq data

This approach attempts to balance **biological interpretability**, **statistical identifiability**, and **practical implementation**.

## Dimensionless Analytical Dynamics with Latent Time and Piecewise Activation {#sec-dimless-latent-piecewise}

This validation study introduces **piecewise constant transcription rates** while maintaining analytical tractability and resolving critical dimensional analysis inconsistencies identified in the piecewise activation framework. The key innovation is a **dimensionally consistent parameterization** that eliminates parameter redundancy by fixing the reference transcription state, while maintaining biological interpretability through fold-change parameters.

### Model Description

The model extends Study 2 by replacing the constant transcription rate $\alpha^* = 1$ with a **piecewise constant transcription function** $\alpha^*_i(t^*)$ that varies over time for each gene. To resolve dimensional analysis violations, we implement a **constrained parameterization** where the off-state transcription rate serves as a fixed reference ($\alpha^*_{\text{off}i} = 1.0$), eliminating parameter redundancy while maintaining biological interpretability through fold-change parameters.

### Dimensionally Consistent Piecewise Framework

#### Reference State Parameterization

To eliminate parameter redundancy identified in the dimensional analysis, we fix the off-state as a reference:

$$\alpha^*_{\text{off}i} = 1.0 \quad \text{(fixed reference, not inferred)}$$

This choice establishes a **consistent dimensional reference** where $U_{0i}$ unambiguously represents the characteristic concentration scale corresponding to the off-state transcription rate.

#### Extended Temporal Framework with Pre-Activation

To accommodate realistic gene expression scenarios, including genes that are already activated when observation begins, we extend the temporal framework to allow **negative onset times**.

#### Piecewise Transcription Rate Function

For each gene $i$, the dimensionless transcription rate follows a three-phase piecewise constant function:

$$\alpha^*_i(t^*) := \begin{cases}
1.0 & \text{if } t^* < t^*_{0,\text{on}i}, \\
R_{\text{on},i} & \text{if } t^*_{0,\text{on}i} \leq t^* < t^*_{0,\text{on}i} + \delta^*_i, \\
1.0 & \text{if } t^* \geq t^*_{0,\text{on}i} + \delta^*_i
\end{cases}$$

where:

- $\alpha^*_{\text{off}i} = 1.0$ is the fixed reference transcription rate
- $R_{\text{on},i} = \alpha^*_{\text{on}i}/\alpha^*_{\text{off}i} = \alpha^*_{\text{on}i}$ is the fold-change during activation (inferred parameter)
- $t^*_{0,\text{on}i}$ is the dimensionless activation onset time (can be negative for pre-activation scenarios)
- $\delta^*_i$ is the dimensionless activation duration

#### Biological Interpretation of Negative Onset Times

When $t^*_{0,\text{on}i} < 0$:

- The gene was **already activated** before observation began ($t^* = 0$)
- Cells at early timepoints may show **high expression** for such genes
- The model captures **pre-existing activation states** in addition to activation events during observation
- **Biological examples**: Early developmental genes already active when profiling begins, stress response genes in cells experiencing ongoing stress, lineage commitment factors in partially committed progenitors

### Steady-State Initial Conditions

Initial conditions are fixed to the off-state steady-state values:

$$u^*_{0i} = 1.0, \quad s^*_{0i} = \frac{1.0}{\gamma^*_i} = \frac{1}{\gamma^*_i}$$

This eliminates the need to infer $u^*_{0i}$ and $s^*_{0i}$ as separate parameters while providing equivalent modeling flexibility through the characteristic scale $U_{0i}$ and fold-change $R_{\text{on},i}$.

### Analytical Solutions for Each Phase

The dimensionless system with piecewise activation becomes:

\begin{align}
\frac{du^{\ast}}{dt^{\ast}} &= \alpha^*_i(t^*) - u^{\ast} \\
\frac{ds^{\ast}}{dt^{\ast}} &= u^{\ast} - \gamma^{\ast}_i s^{\ast}
\end{align}

We solve this system analytically for each of the three phases:

#### **Phase 1: Off State** ($t^* < t^*_{0,\text{on}i}$)

With constant transcription rate $\alpha^*_{\text{off}i} = 1.0$ and initial conditions at steady state, the system remains at equilibrium:

\begin{align}
u^*_{ij}(t^*) &= 1.0 \\
s^*_{ij}(t^*) &= \frac{1.0}{\gamma^*_i}
\end{align}

**Note**: This phase may not be observed if $t^*_{0,\text{on}i} < 0$ (pre-activation scenario).

#### **Phase 2: On State** ($t^*_{0,\text{on}i} \leq t^* < t^*_{0,\text{on}i} + \delta^*_i$)

Let $\tau_{\text{on}} = t^* - t^*_{0,\text{on}i}$ be the time since activation onset. The system transitions from the off-state steady state toward the on-state steady state.

**Initial conditions for Phase 2:**
$$u^*_{\text{on},0i} = 1.0, \quad s^*_{\text{on},0i} = \frac{1.0}{\gamma^*_i}$$

**Analytical solutions:**

For $\gamma^*_i \neq 1$:
\begin{align}
u^*_{ij}(\tau_{\text{on}}) &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\tau_{\text{on}}} \\
s^*_{ij}(\tau_{\text{on}}) &= \frac{R_{\text{on},i}}{\gamma^*_i} + \left(\frac{1.0}{\gamma^*_i} - \xi_{\text{on}i} - \frac{R_{\text{on},i}}{\gamma^*_i}\right) e^{-\gamma^*_i \tau_{\text{on}}} + \xi_{\text{on}i} e^{-\tau_{\text{on}}}
\end{align}

where $\xi_{\text{on}i} = \frac{1.0 - R_{\text{on},i}}{\gamma^*_i - 1}$.

For $\gamma^*_i = 1$:
\begin{align}
u^*_{ij}(\tau_{\text{on}}) &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\tau_{\text{on}}} \\
s^*_{ij}(\tau_{\text{on}}) &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\tau_{\text{on}}} + (1.0 - R_{\text{on},i}) \tau_{\text{on}} e^{-\tau_{\text{on}}}
\end{align}

**Special case interpretation ($\gamma^*_i = 1$):**

The case $\gamma^*_i = 1$ represents **balanced splicing-degradation kinetics** where mRNA degradation occurs at exactly the same rate as pre-mRNA splicing. This creates a mathematical resonance that fundamentally changes the system's dynamics:

- **Biological meaning**: The characteristic timescales for splicing ($1/\beta_i$) and degradation ($1/\gamma_i$) are identical
- **Mathematical consequence**: The standard exponential solutions become degenerate, requiring the additional $\tau_{\text{on}} e^{-\tau_{\text{on}}}$ term
- **Physical interpretation**: The $\tau e^{-\tau}$ term represents the accumulation of mRNA over time when production and degradation rates are perfectly balanced
- **Parameter recovery implications**: Inference near $\gamma^*_i = 1$ may exhibit slower convergence due to the discontinuous derivative in the analytical solutions
- **Numerical considerations**: The transition between $\gamma^*_i \neq 1$ and $\gamma^*_i = 1$ solutions requires careful handling to maintain numerical stability

#### **Phase 3: Return to Off State** ($t^* \geq t^*_{0,\text{on}i} + \delta^*_i$)

Let $\tau_{\text{off}} = t^* - (t^*_{0,\text{on}i} + \delta^*_i)$ be the time since returning to the off state. The system transitions from the end-of-phase-2 state back toward the off-state steady state.

**Initial conditions for Phase 3:**

The initial conditions for Phase 3 are the endpoint values from Phase 2, computed explicitly as:

For $\gamma^*_i \neq 1$:
\begin{align}
u^*_{\text{off},0i} &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\delta^*_i} \\
s^*_{\text{off},0i} &= \frac{R_{\text{on},i}}{\gamma^*_i} + \left(\frac{1.0}{\gamma^*_i} - \xi_{\text{on}i} - \frac{R_{\text{on},i}}{\gamma^*_i}\right) e^{-\gamma^*_i \delta^*_i} + \xi_{\text{on}i} e^{-\delta^*_i}
\end{align}

For $\gamma^*_i = 1$:
\begin{align}
u^*_{\text{off},0i} &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\delta^*_i} \\
s^*_{\text{off},0i} &= R_{\text{on},i} + (1.0 - R_{\text{on},i}) e^{-\delta^*_i} + (1.0 - R_{\text{on},i}) \delta^*_i e^{-\delta^*_i}
\end{align}

where $\xi_{\text{on}i} = \frac{1.0 - R_{\text{on},i}}{\gamma^*_i - 1}$ for the $\gamma^*_i \neq 1$ case.

**Analytical solutions:**

For $\gamma^*_i \neq 1$:
\begin{align}
u^*_{ij}(\tau_{\text{off}}) &= 1.0 + (u^*_{\text{off},0i} - 1.0) e^{-\tau_{\text{off}}} \\
s^*_{ij}(\tau_{\text{off}}) &= \frac{1.0}{\gamma^*_i} + \left(s^*_{\text{off},0i} - \xi_{\text{off}i} - \frac{1.0}{\gamma^*_i}\right) e^{-\gamma^*_i \tau_{\text{off}}} + \xi_{\text{off}i} e^{-\tau_{\text{off}}}
\end{align}

where $\xi_{\text{off}i} = \frac{u^*_{\text{off},0i} - 1.0}{\gamma^*_i - 1}$.

For $\gamma^*_i = 1$:
\begin{align}
u^*_{ij}(\tau_{\text{off}}) &= 1.0 + (u^*_{\text{off},0i} - 1.0) e^{-\tau_{\text{off}}} \\
s^*_{ij}(\tau_{\text{off}}) &= 1.0 + (s^*_{\text{off},0i} - 1.0) e^{-\tau_{\text{off}}} + (u^*_{\text{off},0i} - 1.0) \tau_{\text{off}} e^{-\tau_{\text{off}}}
\end{align}

### Gene Expression Pattern Classification

This piecewise framework enables representation of diverse gene expression patterns through specific parameter combinations. Each pattern is defined by quantitative parameter ranges applied to **independent absolute temporal parameters** that eliminate scaling symmetry while maintaining biological interpretability.

**Independent Parameter Framework**: The classification uses independent absolute temporal parameters that are sampled directly without hierarchical scaling relationships:

\begin{align}
T_M &\sim \text{Gamma}(\alpha_{T}, \beta_{T}) \quad \text{(process duration)} \\
t^*_j &\sim \text{Uniform}(0, T_M) \quad \text{(cell temporal positions)} \\
t^*_{on,i} &\sim \text{Normal}(\mu_{on}, \sigma_{on}^2) \quad \text{(absolute activation onset time)} \\
\delta^*_i &\sim \text{LogNormal}(\mu_{\delta}, \sigma_{\delta}^2) \quad \text{(absolute activation duration)}
\end{align}

This independent structure eliminates scaling symmetry by removing multiplicative relationships between temporal parameters, ensuring unique parameter identifiability while maintaining biological interpretability.

#### **Pre-Activation Patterns**

**Characteristics**: Genes that were already activated before observation began, showing decay-only dynamics from an initially activated steady-state.

**Parameter specifications**:

- $t^*_{on,i} < 0.0$ (absolute activation onset before observation window)
- $R_{\text{on},i} > 2.0$ (moderate to strong fold-change during activation)

**Biological interpretation**: These genes underwent activation before the experimental observation window. During the observed period, they exhibit decay-only dynamics as they return toward baseline expression levels. The negative absolute onset time indicates that activation occurred in the "past" relative to the observation start.

**Biological examples**: Early developmental genes, maternal transcripts during development, lineage commitment factors established before observation, stress response genes in ongoing stress conditions

#### **Transient Activation Patterns**

**Characteristics**: Genes that show complete activation-decay cycles within the observation window, exhibiting brief, pulse-like activation followed by return toward baseline.

**Parameter specifications**:

- $0 < t^*_{on,i} < 1.5$ (early activation within process duration, assuming conservative prior Gamma(5,1))
- $\delta^*_i < 2.0$ (short activation duration relative to process, assuming conservative prior Gamma(5,1))
- $R_{\text{on},i} > 2.0$ (sufficient fold-change to observe activation)

**Biological interpretation**: These genes activate early enough and for a short enough duration that the complete activation-decay cycle is observable within the experimental window. The constraints ensure that both the activation and subsequent decay phases are captured.

**Biological examples**: Immediate early genes, signaling molecules, transient developmental regulators, cell cycle checkpoint genes, acute stress response genes

#### **Sustained Activation Patterns**

**Characteristics**: Genes that become activated early and remain highly expressed throughout most of the observation period, showing net increase over the observation window.

**Parameter specifications**:

- $0 < t^*_{on,i} < 1.5$ (early activation within process duration, assuming conservative prior Gamma(5,1))
- $\delta^*_i > 2.5$ (long activation duration relative to process, assuming conservative prior Gamma(5,1))
- $R_{\text{on},i} > 2.0$ (strong fold-change during activation)

**Biological interpretation**: These genes activate early in the observation window and maintain high expression levels throughout most of the observed period. The long activation duration relative to the observation window means that decay back to baseline is either minimal or occurs beyond the observation period.

**Biological examples**: Lineage-specific transcription factors, structural proteins, metabolic enzymes, terminal differentiation markers, long-term stress adaptation genes

### Biological Interpretation of Timescale Prior Hyperparameters

The process duration $T_M$ determines the temporal scope of observable dynamics and requires careful hyperparameter selection based on biological expectations and experimental context.

#### **Dynamical Range and Steady-State Achievement**

In the dimensionless framework where the reference rate is 1, the process duration $T_M$ determines what fraction of steady-state dynamics will be observable:

$$\text{Steady-state approach} = 1 - e^{-T_M}$$

**Key thresholds:**

- $T_M = 1$: Observes 63% approach to steady state
- $T_M = 3$: Observes 95% approach to steady state
- $T_M = 5$: Observes >99% approach to steady state

#### **Hyperparameter Strategy and Biological Prior Knowledge**

**Conservative Prior (Expect Complete Dynamics):**
$$T_M \sim \text{Gamma}(5.0, 1.0) \quad \text{(mean = 5, variance = 5)}$$

- **Biological assumption**: Process likely spans ~5 characteristic timescales
- **Dynamical expectation**: Will observe near-complete approach to steady state
- **Data burden**: Data must provide evidence if process is shorter than expected
- **Use case**: When biological knowledge suggests complete developmental programs

**Permissive Prior (Let Data Determine Range):**
$$T_M \sim \text{Gamma}(1.0, 0.2) \quad \text{(mean = 5, variance = 25)}$$

- **Biological assumption**: Uncertain about process duration, wide range possible
- **Dynamical expectation**: Could observe early transients or complete dynamics
- **Data burden**: Data determines whether short or long timescales are needed
- **Use case**: When process duration is unknown, exploratory analysis

**Skeptical Prior (Assume Short Processes):**
$$T_M \sim \text{Gamma}(1.0, 1.0) \quad \text{(mean = 1, variance = 1, heavy tail)}$$

- **Biological assumption**: Most cellular processes are rapid (early dynamics only)
- **Dynamical expectation**: Primarily observe transient phase (63% approach)
- **Data burden**: Data must strongly support longer timescales if present
- **Use case**: When expecting rapid responses, stress conditions, acute perturbations

#### **Prior Selection Guidelines**

**Choose hyperparameters based on experimental context:**

1. **Developmental processes**: Use conservative prior (Gamma(5,1)) - expect complete programs
2. **Drug responses**: Use skeptical prior (Gamma(1,1)) - expect rapid initial responses
3. **Unknown systems**: Use permissive prior (Gamma(1,0.2)) - let data decide
4. **Time-course validation**: Match prior to known experimental duration

**Sensitivity analysis recommendation:**
Test model robustness across different prior specifications to ensure conclusions are not prior-dependent.

#### **Connection to Gene Parameter Priors**

With independent parameterization, gene timing parameters should be calibrated to $T_M$ expectations:

\begin{align}
t^*_{on,i} &\sim \text{Normal}(0.3 \times 5, \sigma_{on}^2) = \text{Normal}(1.5, \sigma_{on}^2) \quad \text{(expect activation at 30% of process)} \\
\delta^*_i &\sim \text{LogNormal}(\log(0.4 \times 5), \sigma_{\delta}^2) = \text{LogNormal}(\log(2.0), \sigma_{\delta}^2) \quad \text{(expect 40% duration activation)}
\end{align}

This ensures gene parameters are scaled appropriately to the expected process duration while maintaining independence and supporting the three piecewise activation patterns (pre-activation, transient, sustained).

### Identifiability Proof for Independent Parameterization

**Theorem:** The piecewise activation likelihood with independent parameterization is not invariant under parameter scaling.

**Proof:** For any scaling factor $\lambda \neq 1$:

1. **Gene parameters are sampled independently**: $t^*_{on,i} \not\propto T_M$ and $\delta^*_i \not\propto T_M$

2. **Scaling cell times but not gene parameters changes piecewise phase assignments**:
   - Original: Cell $j$ in phase determined by comparing $t^*_j$ vs. $t^*_{on,i}$
   - Scaled: Cell $j$ in phase determined by comparing $\lambda t^*_j$ vs. $t^*_{on,i}$ (unchanged)

3. **The piecewise analytical solutions depend on comparisons like $t^*_j$ vs. $t^*_{on,i}$**:
   - Phase boundaries change when cell times are scaled but gene times are not
   - Different phase assignments lead to different analytical solution forms

4. **Therefore**: $\mathcal{L}(T_M, \{t^*_j\}, \{t^*_{on,i}\}, \{\delta^*_i\}) \neq \mathcal{L}(\lambda T_M, \{\lambda t^*_j\}, \{t^*_{on,i}\}, \{\delta^*_i\})$ □

**Corollary:** Parameter recovery is uniquely identifiable because no two distinct parameter configurations can produce identical likelihoods.

### Mathematical Framework for Pre-Activation Scenarios

The Normal prior for onset times enables modeling of **pre-activation scenarios** where genes are already activated when observation begins. This extension is mathematically valid and biologically realistic:

#### **Mathematical Validity of Negative Onset Times**

When $t^*_{on,i} < 0$:

1. **Phase determination remains consistent**: For any observed time $t^* \geq 0$, we can still determine which phase applies by comparing $t^*$ to $t^*_{on,i}$ and $t^*_{on,i} + \delta^*_i$

2. **Analytical solutions remain valid**: All exponential solutions are well-defined for negative onset times

3. **Biological interpretation is clear**: Negative onset simply means activation occurred before the observation window

#### **Implementation Considerations**

- **Phase 1 may be unobserved**: If $t^*_{on,i} < 0$, no observed cells will be in Phase 1
- **Phase 2 starts immediately**: Cells at $t^* = 0$ may already be in the activated state
- **Duration constraints**: For pre-activation genes, $\delta^*_i > |t^*_{on,i}|$ ensures activation extends into the observation window

### Constraint Feasibility Analysis for Independent Parameterization

The pattern constraints were optimized using a systematic CDF-based analysis to ensure mathematical feasibility while preserving biological interpretability under the independent parameterization framework.

#### **Mathematical Framework for Constraint Analysis**

For each pattern constraint, we calculate the probability that a parameter sampled from its prior distribution satisfies the constraint using cumulative distribution functions (CDFs).

For **LogNormal parameters** ($R_{\text{on},i}$, $\delta^*_i$), the probability of satisfying constraint $X > \theta$ is:

$$P(X > \theta) = 1 - \Phi\left(\frac{\log(\theta) - \mu}{\sigma}\right)$$

For **Normal parameters** ($t^*_{on,i}$), the probability of satisfying constraint $X > \theta$ is:

$$P(X > \theta) = 1 - \Phi\left(\frac{\theta - \mu}{\sigma}\right)$$

where $\Phi$ is the standard normal CDF. The joint probability of satisfying all constraints for a pattern is the product of individual constraint probabilities (assuming independence).

#### **Constraint Feasibility Assessment**

```{python}
#| code-fold: true
#| code-summary: "Show/Hide Code"
#| eval: false

# CDF-based feasibility analysis for pattern constraints
from scipy import stats
import numpy as np

def calculate_lognormal_cdf_probability(loc, scale, threshold, upper=True):
    """Calculate P(X > threshold) or P(X < threshold) for LogNormal(loc, scale)."""
    if upper:
        return 1 - stats.lognorm.cdf(threshold, s=scale, scale=np.exp(loc))
    else:
        return stats.lognorm.cdf(threshold, s=scale, scale=np.exp(loc))

def calculate_normal_cdf_probability(loc, scale, threshold, upper=True):
    """Calculate P(X > threshold) or P(X < threshold) for Normal(loc, scale)."""
    if upper:
        return 1 - stats.norm.cdf(threshold, loc=loc, scale=scale)
    else:
        return stats.norm.cdf(threshold, loc=loc, scale=scale)

# Prior hyperparameters (updated for independent absolute parameterization)
# Assuming T_M ~ Gamma(5.0, 1.0) with E[T_M] = 5.0
E_T_M = 5.0
priors = {
    'R_on': {'loc': 0.916, 'scale': 0.4},                           # log(2.5), fold-change (LogNormal)
    't_on_star': {'loc': 1.5, 'scale': 0.8},                       # Normal(1.5, 0.8²), absolute onset
    'delta_star': {'loc': np.log(2.0), 'scale': 0.45},             # log(2.0), absolute duration (LogNormal)
}

# Calculate constraint feasibility for each pattern (updated for independent parameterization)
patterns = {
    'pre_activation': [
        ('t_on_star', '<', 0.0),        # Activation before observation window
        ('R_on', '>', 2.0),             # Moderate to strong fold change
    ],
    'transient': [
        ('t_on_star', '>', 0.0),                    # Activation within observation window
        ('t_on_star', '<', 1.5),                   # Early enough to complete cycle
        ('delta_star', '<', 2.0),                  # Short pulse duration
        ('R_on', '>', 2.0),                        # Sufficient fold change to observe
    ],
    'sustained': [
        ('t_on_star', '>', 0.0),                    # Activation within observation window
        ('t_on_star', '<', 1.5),                   # Early activation onset
        ('delta_star', '>', 2.5),                  # Long activation duration
        ('R_on', '>', 2.0),                        # Strong fold change
    ]
}

for pattern_name, constraints in patterns.items():
    joint_prob = 1.0
    print(f"\n{pattern_name.upper()} PATTERN:")

    for param, op, threshold in constraints:
        prior = priors[param]

        if param == 't_on_star':  # Normal distribution
            prob = calculate_normal_cdf_probability(
                prior['loc'], prior['scale'], threshold, upper=(op == '>')
            )
        else:  # LogNormal distribution
            prob = calculate_lognormal_cdf_probability(
                prior['loc'], prior['scale'], threshold, upper=(op == '>')
            )

        joint_prob *= prob
        print(f"  P({param} {op} {threshold}) = {prob:.3f}")

    print(f"  Joint probability: {joint_prob:.3f}")
```

### Probabilistic Graphical Model

The probabilistic graphical model extends Study 2 by adding gene-specific piecewise activation parameters while using independent temporal parameterization to eliminate scaling symmetry. For visual clarity, we use $\theta_i$ to represent the vector of non-temporal piecewise activation parameters $(\gamma^*_i, R_{\text{on},i})$ and $\Delta_i$ to represent the vector of independent temporal gene parameters $(t^*_{0,\text{on}i}, \delta^*_i)$. Note that $\alpha^*_{\text{off}i} = 1.0$ is fixed and not shown as a random variable.

```{python}
#| label: fig-piecewise-activation-pgm
#| code-fold: true
#| fig-cap: Probabilistic graphical model for dimensionless analytical dynamics with independent latent time coordinates and piecewise activation.

import daft
import matplotlib.pyplot as plt

plt.rcParams["font.family"] = "serif"
plt.rcParams["font.size"] = 16
plt.rcParams["text.usetex"] = True

pgm = daft.PGM(line_width=1.2)

# hyperparameters for gene-specific parameters
pgm.add_node("mu_theta", r"$\mu_{\theta}$", 0.5, 6, fixed=True)
pgm.add_node("sigma_theta", r"$\sigma_{\theta}^2$", 1.5, 6, fixed=True)
pgm.add_node("mu_Delta", r"$\mu_{\Delta}$", 2.5, 6, fixed=True)
pgm.add_node("sigma_Delta", r"$\sigma_{\Delta}^2$", 3.5, 6, fixed=True)
pgm.add_node("mu_U0", r"$\mu_{U_0}$", 4.5, 6, fixed=True)
pgm.add_node("sigma_U0", r"$\sigma_{U_0}^2$", 5, 6, fixed=True)

# hyperparameters for independent time structure
pgm.add_node("alpha_T", r"$\alpha_{T}$", 5.5, 6, fixed=True)
pgm.add_node("beta_T", r"$\beta_{T}$", 6, 6, fixed=True)

# hyperparameters for lambda (entering from right edge of cell plate)
pgm.add_node("mu_lambda", r"$\mu_{\lambda}$", 6.5, 3.5, fixed=True)
pgm.add_node("sigma_lambda", r"$\sigma_{\lambda}^2$", 6.5, 2.5, fixed=True)

# latent variables for gene-specific parameters
pgm.add_node("theta_i", r"$\theta_i$", 1, 5)
pgm.add_node("Delta_i", r"$\Delta_i$", 3, 5)
pgm.add_node("U_0i", r"$U_{0i}$", 4.5, 5)

# independent time parameters
pgm.add_node("T_M", r"$T_M$", 5.5, 5)

# latent time coordinates and cell-specific parameters
pgm.add_node("t_star_j", r"$t^{\ast}_j$", 5.5, 4)
pgm.add_node("lambda_j", r"$\lambda_j$", 5.5, 3)

# latent variables for cell-specific outcomes (centered between rows)
pgm.add_node(
    "u_star_ij",
    r"$u^{\ast}_{ij}$",
    2,
    3.75,
    scale=1.0,
    shape="rectangle",
)
pgm.add_node(
    "s_star_ij",
    r"$s^{\ast}_{ij}$",
    4,
    3.75,
    scale=1.0,
    shape="rectangle",
)

# observed data
pgm.add_node(
    "u_obs_ij",
    r"$u_{ij}$",
    2,
    2.25,
    scale=1.0,
    observed=True,
)
pgm.add_node(
    "s_obs_ij",
    r"$s_{ij}$",
    4,
    2.25,
    scale=1.0,
    observed=True,
)

# edges
edge_params = {"head_length": 0.3, "head_width": 0.25, "lw": 0.7}

# gene-specific parameter edges
pgm.add_edge("mu_theta", "theta_i", plot_params=edge_params)
pgm.add_edge("sigma_theta", "theta_i", plot_params=edge_params)
pgm.add_edge("mu_Delta", "Delta_i", plot_params=edge_params)
pgm.add_edge("sigma_Delta", "Delta_i", plot_params=edge_params)
pgm.add_edge("mu_U0", "U_0i", plot_params=edge_params)
pgm.add_edge("sigma_U0", "U_0i", plot_params=edge_params)
pgm.add_edge("mu_lambda", "lambda_j", plot_params=edge_params)
pgm.add_edge("sigma_lambda", "lambda_j", plot_params=edge_params)

# independent time structure edges
pgm.add_edge("alpha_T", "T_M", plot_params=edge_params)
pgm.add_edge("beta_T", "T_M", plot_params=edge_params)

# independent time edges (no hierarchical scaling)
pgm.add_edge("T_M", "t_star_j", plot_params=edge_params)

# dynamics edges
pgm.add_edge("theta_i", "u_star_ij", plot_params=edge_params)
pgm.add_edge("theta_i", "s_star_ij", plot_params=edge_params)
pgm.add_edge("Delta_i", "u_star_ij", plot_params=edge_params)
pgm.add_edge("Delta_i", "s_star_ij", plot_params=edge_params)
pgm.add_edge("t_star_j", "u_star_ij", plot_params=edge_params)
pgm.add_edge("t_star_j", "s_star_ij", plot_params=edge_params)

# observation edges
pgm.add_edge("u_star_ij", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("s_star_ij", "s_obs_ij", plot_params=edge_params)
pgm.add_edge("U_0i", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("U_0i", "s_obs_ij", plot_params=edge_params)
pgm.add_edge("lambda_j", "u_obs_ij", plot_params=edge_params)
pgm.add_edge("lambda_j", "s_obs_ij", plot_params=edge_params)

# plates
pgm.add_plate(
    [0.5, 1.25, 4.5, 4.25],
    label=r"$i \in \{1, \ldots, G\}$",
    shift=-0.1,
    fontsize=12,
)
pgm.add_plate(
    [1.5, 1.75, 4.5, 2.75],
    label=r"$j \in \{1, \ldots, N\}$",
    shift=-0.1,
    fontsize=12,
)

pgm.render()
```

### Mathematical Description

The model combines independent temporal parameterization with piecewise constant transcription rates and steady-state initial conditions to eliminate scaling symmetry while enabling rich gene expression dynamics.

**Notation mapping between PGM and mathematical description:**

In the PGM above, we use simplified notation for visual clarity:

- $\theta_i$ represents the vector of **non-temporal** piecewise activation parameters $(\gamma^*_i, R_{\text{on},i})$
- $\Delta_i$ represents the vector of **independent temporal** gene parameters $(t^*_{on,i}, \delta^*_i)$
- The hyperparameters $\mu_{\theta}, \sigma_{\theta}^2$ represent the collection of hyperparameters for all components of $\theta_i$
- The hyperparameters $\mu_{\Delta}, \sigma_{\Delta}^2$ represent the collection of hyperparameters for all components of $\Delta_i$
- $\alpha^*_{\text{off}i} = 1.0$ is fixed and not shown as a random variable
- $T_M$ determines the process duration and constrains cell temporal positions via $t^*_j \sim \text{Uniform}(0, T_M)$

**Detailed priors for independent piecewise activation parameters:**

The priors are designed to encode biologically reasonable parameter ranges while eliminating scaling symmetry through independent parameterization:

**Non-temporal gene-specific parameters:**
\begin{align}
    \gamma^*_i &\sim \text{LogNormal}(\log(1.0), 0.5^2) \quad \text{(relative degradation rate)} \\
    R_{\text{on},i} &\sim \text{LogNormal}(\log(2.5), 0.4^2) \quad \text{(activation fold-change)}
\end{align}

**Independent temporal parameters:**
\begin{align}
    T_M &\sim \text{Gamma}(\alpha_{T}, \beta_{T}) \quad \text{(process duration)} \\
    t^*_j &\sim \text{Uniform}(0, T_M) \quad \text{(cell temporal positions)} \\
    t^*_{on,i} &\sim \text{Normal}(\mu_{on}, \sigma_{on}^2) \quad \text{(absolute activation onset time)} \\
    \delta^*_i &\sim \text{LogNormal}(\mu_{\delta}, \sigma_{\delta}^2) \quad \text{(absolute activation duration)}
\end{align}

**Pattern classification framework**: The three expression patterns are defined by constraints on the independent temporal parameters:

- **Pre-activation**: $t^*_{on,i} < 0.0$ and $R_{\text{on},i} > 2.0$
- **Transient**: $0 < t^*_{on,i} < 1.5$, $\delta^*_i < 2.0$, and $R_{\text{on},i} > 2.0$ (assuming conservative prior Gamma(5,1))
- **Sustained**: $0 < t^*_{on,i} < 1.5$, $\delta^*_i > 2.5$, and $R_{\text{on},i} > 2.0$ (assuming conservative prior Gamma(5,1))

**Biological interpretation of independent prior choices:**

**Non-temporal parameters:**

- **$\gamma^*_i \sim \text{LogNormal}(\log(1.0), 0.5^2)$**: Centers relative degradation around 1 (balanced splicing/degradation), with 95% of values between ~0.37 and ~2.7.

- **$R_{\text{on},i} \sim \text{LogNormal}(\log(2.5), 0.4^2)$**: Centers fold-change at 2.5× during activation, with 95% between ~1.5 and ~4.2.

**Independent temporal parameters:**

- **$T_M \sim \text{Gamma}(\alpha_{T}, \beta_{T})$**: Process duration with hyperparameters chosen based on experimental context (conservative: Gamma(5,1), permissive: Gamma(1,0.2), skeptical: Gamma(1,1)).

- **$t^*_{on,i} \sim \text{Normal}(\mu_{on}, \sigma_{on}^2)$**: Absolute activation onset time, typically centered around 1.5 to expect activation at 30% of process duration (assuming conservative prior Gamma(5,1) with mean 5). **Negative values** enable pre-activation scenarios where genes were already activated before observation began.

- **$\delta^*_i \sim \text{LogNormal}(\mu_{\delta}, \sigma_{\delta}^2)$**: Absolute activation duration, typically centered around 2.0 to expect 40% duration activation (assuming conservative prior Gamma(5,1) with mean 5). This enables both transient (short duration) and sustained (long duration) activation patterns.

**Pattern classification implications:**

- **Pre-activation** ($t^*_{on,i} < 0$): Probability depends on $\mu_{on}$ and $\sigma_{on}$ choices
- **Transient** ($0 < t^*_{on,i} < 1.5$ and $\delta^*_i < 2.0$): Balanced probability for observable complete cycles (assuming conservative prior Gamma(5,1))
- **Sustained** ($0 < t^*_{on,i} < 1.5$ and $\delta^*_i > 2.5$): Balanced probability for long-duration activation (assuming conservative prior Gamma(5,1))

**Independent parameterization benefits:**

- **Eliminates scaling symmetry**: No multiplicative relationships between temporal parameters
- **Unique identifiability**: Each parameter configuration produces a unique likelihood
- **Biological interpretability**: All parameters have direct biological meaning
- **Flexible prior specification**: Gene timing parameters can be calibrated to expected process duration

**Priors for other gene-specific parameters:**
\begin{align}
    U_{0i} &\sim \text{LogNormal}(\mu_{U_0}, \sigma_{U_0}^2)
\end{align}

**Cell-specific capture efficiency:**
\begin{align}
    \lambda_j &\sim \text{LogNormal}(\mu_{\lambda}, \sigma_{\lambda}^2)
\end{align}

**Dimensionless dynamics with piecewise activation:**

The dimensionless concentrations are computed using the analytical solutions for each phase as derived above, with the appropriate phase determined by comparing $t^*_j$ to the gene-specific activation parameters $t^*_{on,i}$ and $\delta^*_i$. All temporal parameters are now independent, eliminating scaling symmetry.

**Observation model:**
\begin{align}
    u_{ij} &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot u^*_{ij}) \\
    s_{ij} &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot s^*_{ij})
\end{align}

### Posterior Predictive Check Framework

The posterior predictive checking procedure provides a rigorous mathematical framework for validating the piecewise activation model's ability to recover known parameters from synthetic data. This Bayesian validation approach systematically assesses parameter recovery performance by comparing posterior predictive samples to the original synthetic observations.

#### **Mathematical Formulation of Posterior Predictive Checking**

**Prior Predictive Distribution**

The prior predictive distribution represents the model's predictions before observing any data:

$$p(\tilde{y}) = \int p(\tilde{y} | \theta) p(\theta) d\theta$$

where $\theta$ represents the complete parameter vector including all gene-specific parameters $(\gamma^*_i, R_{\text{on},i}, t^*_{on,i}, \delta^*_i, U_{0i})$, independent time parameters $(T_M, t^*_j)$, and cell-specific capture efficiencies $(\lambda_j)$.

#### **Prior Predictive Distribution: Mathematical Foundation**

**Fundamental Definition and Interpretation**

The prior predictive distribution represents the model's predictions about observable data before conditioning on any observations, providing a complete characterization of the model's predictive uncertainty in the absence of data. This marginal distribution integrates over all possible parameter configurations weighted by their prior probabilities.

For the piecewise activation model, this becomes:

\begin{align}
p(\tilde{y}) &= \int p(\tilde{y} | \gamma^*_i, R_{\text{on},i}, t^*_{on,i}, \delta^*_i, U_{0i}, T_M, t^*_j, \lambda_j) \times \nonumber \\
&\quad p(\gamma^*_i, R_{\text{on},i}, t^*_{on,i}, \delta^*_i, U_{0i}, T_M, t^*_j, \lambda_j) \, d\theta \label{eq-prior-predictive-piecewise}
\end{align}

where the integration spans the complete hierarchical parameter space defined by the model's prior distributions.

**Hierarchical Integration Decomposition**

The prior predictive distribution decomposes according to the model's hierarchical structure:

\begin{align}
p(\tilde{y}) &= \int \int \int \int p(\tilde{y} | T_M, \theta_{\text{gene}}, \theta_{\text{cell}}, \theta_{\text{tech}}) \times \nonumber \\
&\quad p(T_M) \, p(\theta_{\text{gene}}) \, p(\theta_{\text{cell}}) \, p(\theta_{\text{tech}}) \, dT_M \, d\theta_{\text{gene}} \, d\theta_{\text{cell}} \, d\theta_{\text{tech}} \label{eq-independent-integration}
\end{align}

where:

- $\theta_{\text{gene}} = \{\gamma^*_i, R_{\text{on},i}, t^*_{on,i}, \delta^*_i, U_{0i}\}_{i=1}^G$ represents gene-specific parameters
- $\theta_{\text{cell}} = \{t^*_j\}_{j=1}^N$ represents cell-specific temporal parameters
- $\theta_{\text{tech}} = \{\lambda_j\}_{j=1}^N$ represents technical efficiency parameters

This decomposition reflects the model's assumption that gene-specific kinetics, cell-specific temporal positions, and technical factors contribute independently to the prior uncertainty, with no hierarchical scaling relationships.

**Monte Carlo Approximation**

The prior predictive distribution is computed via Monte Carlo sampling:

\begin{align}
p(\tilde{y}) \approx \frac{1}{S} \sum_{s=1}^S p(\tilde{y} | \theta^{(s)}) \label{eq-mc-prior-predictive}
\end{align}

where $\theta^{(s)} \sim p(\theta)$ are samples from the joint prior distribution.

**Detailed Sampling Procedure:**

1. **Sample process duration**:
   \begin{align}
   {T_M}^{(s)} &\sim \text{Gamma}(\alpha_{T}, \beta_{T})
   \end{align}

2. **Sample cell-specific temporal positions**:
   \begin{align}
   {t^{*}_j}^{(s)} &\sim \text{Uniform}(0, {T_M}^{(s)}) \quad \text{for } j \in \{1, \ldots, N\}
   \end{align}

3. **Sample gene-specific parameters**:
   \begin{align}
   {\gamma^{*}_i}^{(s)} &\sim \text{LogNormal}(\log(1.0), 0.5^2) \\
   {R_{\text{on},i}}^{(s)} &\sim \text{LogNormal}(\log(2.5), 0.4^2) \\
   {t^*_{on,i}}^{(s)} &\sim \text{Normal}(\mu_{on}, \sigma_{on}^2) \\
   {\delta^*_i}^{(s)} &\sim \text{LogNormal}(\mu_{\delta}, \sigma_{\delta}^2) \\
   {U_{0i}}^{(s)} &\sim \text{LogNormal}(\mu_{U_0}, \sigma_{U_0}^2)
   \end{align}

4. **Sample capture efficiencies**:
   \begin{align}
   {\lambda_j}^{(s)} &\sim \text{LogNormal}(\mu_{\lambda}, \sigma_{\lambda}^2)
   \end{align}

5. **Compute latent concentrations**:
   \begin{align}
   {u^{*}_{ij}}^{(s)}, {s^{*}_{ij}}^{(s)} &= f_{\text{piecewise}}({t^*_j}^{(s)}, {\gamma^*_i}^{(s)}, {R_{\text{on},i}}^{(s)}, {t^*_{on,i}}^{(s)}, {\delta^*_i}^{(s)})
   \end{align}

6. **Sample observations**:
   \begin{align}
   {u_{ij}}^{(s)} &\sim \text{Poisson}({\lambda_j}^{(s)} \cdot {U_{0i}}^{(s)} \cdot {u^{*}_{ij}}^{(s)}) \\
   {s_{ij}}^{(s)} &\sim \text{Poisson}({\lambda_j}^{(s)} \cdot {U_{0i}}^{(s)} \cdot {s^{*}_{ij}}^{(s)})
   \end{align}

**Prior Predictive Uncertainty Decomposition**

The total prior predictive uncertainty decomposes across the hierarchical parameter structure:

\begin{align}
\text{Var}[\tilde{y}] = \mathbb{E}_\theta[\text{Var}[y|\theta]] + \text{Var}_\theta[\mathbb{E}[y|\theta]] \label{eq-prior-uncertainty-decomp}
\end{align}

where the expectation and variance are taken over the joint prior distribution $p(\theta)$.

**Uncertainty Sources in Prior Predictive:**

The piecewise activation model with independent parameterization exhibits multiple sources of prior uncertainty:

1. **Process duration uncertainty**: Uncertainty in $T_M$ affects the temporal scope of the biological process and constrains cell temporal positions

2. **Cell temporal position uncertainty**: Uncertainty in individual $t^*_j$ values affects where each cell is positioned along the temporal trajectory

3. **Gene-specific kinetic uncertainty**: Prior uncertainty in $\gamma^*_i, R_{\text{on},i}$ affects the shape and magnitude of concentration trajectories during each phase

4. **Gene-specific temporal pattern uncertainty**: Prior uncertainty in $t^*_{on,i}, \delta^*_i$ affects when activation occurs and how long it lasts in absolute time

5. **Characteristic scale uncertainty**: Prior uncertainty in $U_{0i}$ affects the absolute magnitude of expression levels for each gene

6. **Technical efficiency uncertainty**: Prior uncertainty in $\lambda_j$ affects the detection efficiency and overall count levels for each cell

7. **Observation noise**: Irreducible Poisson variance in count observations that persists regardless of parameter knowledge

**Mathematical Decomposition:**

For individual observations, the prior predictive variance decomposes as:

\begin{align}
\text{Var}[\tilde{y}_{ij}] = \mathbb{E}[\lambda_j U_{0i} u^*_{ij}(\theta)] + \text{Var}[\lambda_j U_{0i} u^*_{ij}(\theta)] \label{eq-individual-prior-variance}
\end{align}

where the first term represents the expected Poisson variance (observation noise) and the second term represents the variance due to parameter uncertainty propagating through the piecewise dynamics.

**Nonlinear Uncertainty Propagation in Prior Predictive:**

Parameter uncertainty propagates nonlinearly through the piecewise analytical solutions under the prior:

- **Phase assignment uncertainty**: Prior uncertainty in temporal parameters creates uncertainty about which phase each cell-gene pair occupies, leading to mixture-like behavior in the prior predictive distribution

- **Exponential amplification**: The exponential terms in analytical solutions amplify prior parameter uncertainty, particularly for genes with large characteristic scales or cells at extreme time points

- **Independent parameter interactions**: Uncertainty in gene timing parameters interacts with uncertainty in cell temporal positions through phase boundary comparisons, but without multiplicative scaling relationships

- **Special case transitions**: Prior probability mass near $\gamma^*_i = 1$ creates discontinuous changes in the analytical solution form, contributing additional uncertainty

**Relationship to Posterior Predictive**

**Bayesian Learning Interpretation:**

The posterior predictive distribution represents the prior predictive distribution updated by observed data:

\begin{align}
p(\tilde{y} | y_{obs}) = \int p(\tilde{y} | \theta) p(\theta | y_{obs}) d\theta \label{eq-posterior-predictive-relation}
\end{align}

where $p(\theta | y_{obs}) \propto p(y_{obs} | \theta) p(\theta)$ incorporates the likelihood of observed data through Bayes' theorem.

**Uncertainty Reduction:**

Bayesian learning systematically reduces predictive uncertainty:

\begin{align}
\text{Var}[\tilde{y} | y_{obs}] \leq \text{Var}[\tilde{y}] \label{eq-uncertainty-reduction}
\end{align}

with equality only when the observed data provides no information about the parameters (i.e., when the likelihood is flat).

**Information Content Quantification:**

The reduction in predictive uncertainty quantifies the information content of the observed data:

\begin{align}
\text{Information} = \text{Var}[\tilde{y}] - \text{Var}[\tilde{y} | y_{obs}] \label{eq-information-content}
\end{align}

This quantity measures how much the data constrains the model's predictions about future observations.

**Prior Predictive Validation Applications**

**Model Specification Validation:**

Prior predictive checks validate whether the model can generate data with realistic characteristics:

1. **Count distribution realism**: Do prior predictive counts match expected single-cell RNA-seq distributional properties (mean-variance relationships, sparsity patterns, dynamic range)?

2. **Temporal coordination**: Does the independent time structure produce biologically plausible cell orderings and temporal relationships?

3. **Expression magnitude realism**: Do the characteristic scales $U_{0i}$ and capture efficiencies $\lambda_j$ combine to produce realistic expression levels?

4. **Kinetic parameter coverage**: Does the prior cover the range of biologically plausible kinetic behaviors without generating unrealistic dynamics?

**Prior Sensitivity Analysis:**

Compare prior predictive distributions under different hyperparameter choices:

\begin{align}
p(\tilde{y} | \alpha_1) \text{ vs. } p(\tilde{y} | \alpha_2) \label{eq-prior-sensitivity}
\end{align}

where $\alpha_1, \alpha_2$ represent different hyperparameter configurations. This analysis identifies which hyperparameters most strongly influence prior predictions.

**Computational Validation:**

Prior predictive sampling validates computational implementation:

1. **Convergence assessment**: Do prior predictive samples converge to stable distributions as the number of samples increases?

2. **Numerical stability**: Are analytical solutions numerically stable across the full range of prior parameter values?

3. **Phase assignment consistency**: Do temporal parameters correctly determine phase assignments across all prior samples?

4. **Parameter constraint satisfaction**: Do all prior samples satisfy model constraints (e.g., positive concentrations, valid phase boundaries)?

**Posterior Predictive Distribution**

After observing synthetic data $y_{obs}$, the posterior predictive distribution incorporates learned parameter constraints:

$$p(\tilde{y} | y_{obs}) = \int p(\tilde{y} | \theta) p(\theta | y_{obs}) d\theta$$

This distribution quantifies the model's uncertainty about future observations given what it has learned from the synthetic data.

**Hierarchical Uncertainty Decomposition**

The piecewise activation model exhibits a complex uncertainty hierarchy that propagates from parameters through latent concentrations to final observations:

1. **Parameter uncertainty**: $\text{Var}[\theta | y_{obs}]$ from the posterior distribution over all model parameters
2. **Temporal uncertainty**: Uncertainty in latent time coordinates $t^*_j$ and process duration $T_M$
3. **Kinetic uncertainty**: Uncertainty in gene-specific kinetic parameters $\gamma^*_i$ and fold-changes $R_{\text{on},i}$
4. **Concentration uncertainty**: Uncertainty in predicted latent concentrations $u^*_{ij}(\theta), s^*_{ij}(\theta)$ arising from parameter uncertainty
5. **Observation uncertainty**: Poisson noise in final count observations

The total predictive uncertainty decomposes as:

$$\text{Var}[\tilde{y} | y_{obs}] = \mathbb{E}_\theta[\text{Var}[y|\theta]] + \text{Var}_\theta[\mathbb{E}[y|\theta]]$$

where the first term represents irreducible observation noise (Poisson variance) and the second term represents reducible uncertainty due to parameter estimation.

#### **Model-Specific Implementation for Piecewise Activation**

**Complete Parameter Space**

The piecewise activation model's parameter space $\theta$ includes:

- **Non-temporal gene parameters**: $\gamma^*_i \sim \text{LogNormal}(\log(1.0), 0.5^2)$, $R_{\text{on},i} \sim \text{LogNormal}(\log(2.5), 0.4^2)$
- **Independent temporal gene parameters**: $t^*_{on,i} \sim \text{Normal}(\mu_{on}, \sigma_{on}^2)$, $\delta^*_i \sim \text{LogNormal}(\mu_{\delta}, \sigma_{\delta}^2)$
- **Characteristic scales**: $U_{0i} \sim \text{LogNormal}(\mu_{U_0}, \sigma_{U_0}^2)$
- **Process duration**: $T_M \sim \text{Gamma}(\alpha_{T}, \beta_{T})$
- **Cell-specific times**: $t^*_j \sim \text{Uniform}(0, T_M)$
- **Capture efficiencies**: $\lambda_j \sim \text{LogNormal}(\mu_{\lambda}, \sigma_{\lambda}^2)$

**Dimensionless Dynamics with Piecewise Activation**

The latent concentrations are computed using analytical solutions that depend on which phase each cell-gene pair occupies:

$$u^*_{ij}(\theta), s^*_{ij}(\theta) = f_{\text{piecewise}}(t^*_j, \gamma^*_i, R_{\text{on},i}, t^*_{on,i}, \delta^*_i)$$

where $f_{\text{piecewise}}$ represents the appropriate analytical solution (Phase 1, 2, or 3) determined by comparing $t^*_j$ to the gene-specific activation timing parameters.

**Poisson Observation Model with Scaling**

The final observations follow Poisson distributions with rates determined by the latent concentrations:

\begin{align}
u_{ij} | \theta &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot u^*_{ij}(\theta)) \\
s_{ij} | \theta &\sim \text{Poisson}(\lambda_j \cdot U_{0i} \cdot s^*_{ij}(\theta))
\end{align}

This scaling structure ensures that parameter uncertainty propagates through the characteristic scales $U_{0i}$ and capture efficiencies $\lambda_j$ to the final count observations.

#### **Validation Procedure: Mathematical Description**

The parameter recovery validation procedure systematically compares prior and posterior predictive distributions to assess the model's ability to learn from data.

**Step 1: Synthetic Data Generation from Prior Predictive**

Generate synthetic data with known "true" parameters by sampling from the prior predictive distribution as described in equations \eqref{eq-prior-predictive-piecewise}-\eqref{eq-mc-prior-predictive}:

1. **Sample true parameters**: $\theta_{true} \sim p(\theta)$ following the hierarchical sampling procedure
2. **Compute latent concentrations**: $u^*_{ij,true}, s^*_{ij,true} = f_{\text{piecewise}}(t^*_{j,true}, \theta_{true})$ using the piecewise analytical solutions
3. **Generate synthetic observations**: $y_{obs} = \{u_{ij}, s_{ij}\} \sim p(y | \theta_{true})$ from the Poisson observation model

This step creates a controlled validation scenario where the "true" parameter values are known by construction, enabling direct assessment of parameter recovery performance.

**Step 2: Posterior Inference**

Fit the model to synthetic data to obtain the posterior distribution:

$$p(\theta | y_{obs}) \propto p(y_{obs} | \theta) p(\theta)$$

This step uses MCMC or variational inference to approximate the posterior distribution over all model parameters.

**Step 3: Posterior Sampling**

Extract $S$ posterior samples from the fitted model:

$$\{\theta^{(s)}\}_{s=1}^S \sim p(\theta | y_{obs})$$

Each sample $\theta^{(s)}$ represents a complete parameter configuration consistent with the observed synthetic data.

**Step 4: Posterior Predictive Sampling**

For each posterior sample $\theta^{(s)}$, generate a corresponding posterior predictive sample:

$$\tilde{y}^{(s)} \sim p(y | \theta^{(s)})$$

**Mathematical Prohibition Against Parameter Averaging**: 

**Correct Sampling**: Each $\tilde{y}^{(s)}$ must be generated using the complete parameter vector $\theta^{(s)}$:

1. Compute phase assignments for each cell-gene pair using ${{t^{\ast}_{j}}}^{(s)}$, ${{t^{\ast}_{on,i}}}^{(s)}$, ${{\delta^{\ast}_i}}^{(s)}$
2. Evaluate analytical solutions: ${{u^*_{ij}}}^{(s)}, {{s^*_{ij}}}^{(s)} = f_{\text{piecewise}}({{t^*_{j}}}^{(s)}, {{\gamma^*_i}}^{(s)}, {{R_{\text{on},i}}}^{(s)}, {{t^*_{on,i}}}^{(s)}, {{\delta^*_i}}^{(s)})$
3. Sample observations: 

\begin{align}
{{u_{ij}}}^{(s)} &\sim \text{Poisson}({{\lambda_j}}^{(s)} \cdot {{U_{0i}}}^{(s)} \cdot {{u^*_{ij}}}^{(s)}) \\
{{s_{ij}}}^{(s)} &\sim \text{Poisson}({{\lambda_j}}^{(s)} \cdot {{U_{0i}}}^{(s)} \cdot {{s^*_{ij}}}^{(s)})
\end{align}

The posterior predictive distribution cannot be computed using averaged parameters such as

\begin{align}
\bar{\theta} = \frac{1}{S}\sum_{s=1}^S {\theta}^{(s)}
\end{align}

Using $\bar{\theta}$ would violate the fundamental definition of posterior predictive distributions and fails to capture parameter uncertainty propagation through the nonlinear dynamics.

**Step 5: Validation Assessment**

Compare posterior predictive samples $\{\tilde{y}^{(s)}\}_{s=1}^S$ to the original synthetic data $y_{obs}$ using multiple validation metrics.

#### **Uncertainty Propagation Through Piecewise Dynamics**

**Parameter Uncertainty Sources**

The piecewise activation model with independent parameterization exhibits multiple sources of parameter uncertainty:

1. **Kinetic parameter uncertainty**: Posterior distributions over $\gamma^*_i$ and $R_{\text{on},i}$ affect the shape and magnitude of concentration trajectories
2. **Temporal parameter uncertainty**: Uncertainty in $t^*_{on,i}$ and $\delta^*_i$ affects when activation occurs and how long it lasts in absolute time
3. **Process duration uncertainty**: Uncertainty in $T_M$ affects the temporal scope and constrains cell temporal positions
4. **Cell-specific uncertainty**: Uncertainty in individual $t^*_j$ and $\lambda_j$ affects cell-specific predictions
5. **Scale uncertainty**: Uncertainty in $U_{0i}$ affects the absolute magnitude of predicted counts

**Nonlinear Uncertainty Propagation**

Parameter uncertainty propagates nonlinearly through the piecewise analytical solutions:

- **Phase transitions**: Small changes in temporal parameters can cause cells to switch between phases, leading to discontinuous changes in predicted concentrations
- **Exponential sensitivity**: The exponential terms in analytical solutions amplify parameter uncertainty, particularly for large time values
- **Interaction effects**: Uncertainty in $\gamma^*_i$ interacts with uncertainty in temporal parameters through the $\xi$ helper variables
- **Special case sensitivity**: Near $\gamma^*_i = 1$, the transition between solution forms creates additional uncertainty

**Total Predictive Uncertainty Decomposition**

For the piecewise activation model, the total predictive uncertainty can be decomposed as:

\begin{align}
\text{Var}[\tilde{y}_{ij} | y_{obs}] &= \mathbb{E}_\theta[\lambda_j U_{0i} u^*_{ij}(\theta)] + \text{Var}_\theta[\lambda_j U_{0i} u^*_{ij}(\theta)] \\
&= \text{Poisson variance} + \text{Parameter uncertainty}
\end{align}

The parameter uncertainty term captures the complex propagation of uncertainty through the hierarchical parameter structure and piecewise dynamics.

#### **Validation Metrics for Posterior Predictive Checking**

**Parameter Recovery Assessment**

Compare true parameters $\theta_{true}$ to posterior samples $\{\theta^{(s)}\}_{s=1}^S$:

1. **Coverage probability**: Fraction of true parameters falling within posterior credible intervals
   $$\text{Coverage}(\alpha) = \frac{1}{|\Theta|} \sum_{\theta_k \in \Theta} \mathbb{I}[\theta_{k,true} \in \text{CI}_\alpha(\theta_k | y_{obs})]$$
   where $\text{CI}_\alpha$ is the $\alpha$-level credible interval.

2. **Posterior mean bias**: Systematic deviation of posterior means from true values
   $$\text{Bias}(\theta_k) = \mathbb{E}[\theta_k | y_{obs}] - \theta_{k,true}$$

3. **Posterior standard deviation**: Measure of parameter uncertainty
   $$\text{SD}(\theta_k) = \sqrt{\text{Var}[\theta_k | y_{obs}]}$$

**Predictive Accuracy Assessment**

Compare observed synthetic data $y_{obs}$ to posterior predictive samples $\{\tilde{y}^{(s)}\}_{s=1}^S$:

1. **Mean Absolute Error (MAE)**: Average absolute deviation between observations and posterior predictive means
   $$\text{MAE} = \frac{1}{GN} \sum_{i=1}^G \sum_{j=1}^N |y_{ij,obs} - \mathbb{E}[\tilde{y}_{ij} | y_{obs}]|$$

2. **Root Mean Square Error (RMSE)**: Penalizes large deviations more heavily
   $$\text{RMSE} = \sqrt{\frac{1}{GN} \sum_{i=1}^G \sum_{j=1}^N (y_{ij,obs} - \mathbb{E}[\tilde{y}_{ij} | y_{obs}])^2}$$

3. **Posterior predictive p-values**: Probability that replicated data would be more extreme than observed data
   $$p_{pp} = P(T(\tilde{y}) \geq T(y_{obs}) | y_{obs})$$
   where $T(\cdot)$ is a test statistic (e.g., mean, variance, skewness).

#### **Computational Considerations for Piecewise Models**

**Analytical Solution Advantages**

The piecewise activation model's analytical solutions provide computational benefits for posterior predictive checking:

1. **Fast likelihood evaluation**: No numerical integration required for each posterior sample
2. **Exact uncertainty propagation**: Analytical derivatives enable precise uncertainty quantification
3. **Efficient validation**: Rapid generation of large numbers of posterior predictive samples
4. **Numerical stability**: Closed-form solutions avoid accumulation of numerical errors

**Phase Assignment Efficiency**

For each posterior sample $\theta^{(s)}$, phase assignments can be computed efficiently:

1. **Vectorized comparisons**: Determine phases for all cell-gene pairs simultaneously
2. **Cached computations**: Reuse phase-specific analytical solutions across similar parameter values
3. **Parallel processing**: Generate multiple posterior predictive samples in parallel

**Memory Management**

Large posterior predictive sample sets require careful memory management:

1. **Streaming generation**: Generate and process samples sequentially to avoid memory overflow
2. **Selective storage**: Store only essential summary statistics rather than full sample arrays
3. **Compressed representations**: Use efficient data structures for sparse count matrices

#### **Biological Interpretation of Validation Results**

**Successful Parameter Recovery Indicators**

1. **High coverage probabilities** (>90%) indicate the model correctly quantifies parameter uncertainty
2. **Low posterior bias** indicates the model can accurately estimate true parameter values
3. **Appropriate posterior uncertainty** balances precision with realistic uncertainty quantification

**Predictive Accuracy Indicators**

1. **Low MAE/RMSE** indicates accurate point predictions
2. **Posterior predictive p-values near 0.5** indicate good model fit without over- or under-fitting
3. **Consistent pattern classification** indicates the model captures essential temporal dynamics

**Failure Mode Identification**

1. **Poor coverage** may indicate model misspecification or inadequate prior specification
2. **High bias** may indicate identifiability issues or optimization problems
3. **Poor predictive accuracy** may indicate missing biological mechanisms or inappropriate noise models

### Properties of the Piecewise Framework

#### **Resolved Dimensional Analysis Issues**

- **Eliminates parameter redundancy**: No ambiguity between $U_{0i}$ and $\alpha^*_{\text{off}i}$ since $\alpha^*_{\text{off}i} = 1.0$ (fixed)
- **Clear dimensional structure**: $U_{0i}$ unambiguously represents off-state concentration scale
- **Proper parameter hierarchy**: Each inferred parameter has a unique biological role
- **No separate inference of initial conditions**: $u^*_{0i}, s^*_{0i}$ fixed to steady-state values
- **Biological realism**: Steady-state initial conditions are more plausible than arbitrary values

#### **Enhanced Temporal Modeling**

- **Pre-activation scenarios**: Models genes already activated when observation begins
- **Flexible onset timing**: Normal prior allows negative onset times naturally
- **Biological realism**: Captures realistic experimental scenarios better
- **Maintains temporal structure**: Independent time modeling with process duration constraints

#### **Rich Expression Pattern Representation**

The framework captures three core expression patterns that encompass the full range of biologically relevant temporal dynamics:

- **Pre-activation genes**: Already activated before observation, showing decay-only dynamics from activated steady-state
- **Transient genes**: Complete activation-decay cycles within observation window, exhibiting pulse-like dynamics
- **Sustained genes**: Early activation with long duration, showing net increase over observation period

**Pattern coverage**: These three patterns effectively capture the essential temporal dynamics while eliminating redundant classifications. The relative temporal parameterization ensures consistent pattern identification across different experimental timescales.

#### **Analytical Tractability**

- **Fast likelihood evaluation**: All phases solved analytically
- **Efficient parameter recovery validation**: No numerical integration required
- **Clear mathematical structure**: Each phase has explicit closed-form solution

#### **Biological Interpretability**

- **Dimensionless parameters**: Universal interpretation across experimental conditions
- **Temporal coordination**: Independent time structure with process duration constraints captures temporal relationships
- **Gene-specific dynamics**: Each gene can follow distinct activation pattern

### Parameter Recovery Validation Strategy

This study will validate the independent parameterization model's ability to:

1. **Recover independent piecewise parameters**: $\gamma^*_i$, $R_{\text{on},i}$, $t^*_{on,i}$, $\delta^*_i$
2. **Maintain process duration inference**: Recover $T_M$ and cell temporal positions $t^*_j$
3. **Handle realistic noise levels**: Maintain accuracy with Poisson observation noise
4. **Scale efficiently**: Demonstrate computational advantages of eliminated scaling symmetry
5. **Validate fold-change interpretation**: Ensure $R_{\text{on},i}$ estimates match true activation strength
6. **Assess dimensional consistency**: Verify elimination of parameter redundancy through fixed $\alpha^*_{\text{off}i} = 1.0$
7. **Validate parameter identifiability**: Confirm elimination of scaling symmetry through independent parameterization
8. **Assess parameter separation**: Verify clean separation between kinetic ($\gamma^*_i$, $R_{\text{on},i}$) and temporal ($t^*_{on,i}$, $\delta^*_i$) parameter inference
9. **Validate independent parameter framework**: Confirm that independent temporal parameters enable reliable parameter recovery across different experimental contexts

### Parameter Recovery Validation Implementation

This validation workflow demonstrates the key capabilities of the piecewise activation model with independent parameterization:

- **Analytical tractability**: Fast likelihood evaluation enables efficient parameter recovery validation
- **Rich parameter space**: Includes fold-change parameters, independent temporal parameters, and process duration
- **Pre-activation modeling**: Supports negative onset times for genes already activated before observation
- **Dimensional consistency**: Eliminates parameter redundancy through fixed reference state parameterization
- **Scaling symmetry elimination**: Independent parameterization ensures unique parameter identifiability
- **Biological interpretability**: All parameters have clear biological meaning and interpretable ranges
- **Comprehensive prior predictive framework**: Mathematical foundation for validating model specification through prior predictive checking as detailed in equations \eqref{eq-prior-predictive-piecewise}-\eqref{eq-information-content}, ensuring the model can generate realistic data patterns before observing any data
- **Independent temporal parameterization**: Enables reliable parameter recovery and eliminates catastrophic parameter recovery failures caused by scaling symmetry

The complete validation scripts referenced in the introduction (`prior-predictive-check.py` and `posterior-predictive-check.py`) provide comprehensive parameter recovery validation including visualization and statistical assessment of recovery performance. The prior predictive checking framework validates model specification and prior adequacy, while the posterior predictive checking framework assesses parameter recovery and predictive accuracy.
