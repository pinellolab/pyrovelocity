---
title: |
  Pyro&thinsp;-Velocity: Probabilistic RNA Velocity inference from single-cell data
toc: true
toc-depth: 2
toc-title: Contents
# Use of `\nameref{sec-methods}` versus [Methods](#sec-methods) or [@sec-methods]
# to refer to sections by name is only compatible with LaTeX outputs
number-sections: false
format:
  nature-pdf:
    # journal.cite-style is included in the tex file but ignored by pandoc if 
    # cite-method is not `natbib`.
    journal:
      cite-style: sn-mathphys-num
    classoption: 
      - lineno
      - twocolumn
    cite-method: natbib
    link-citations: true
    keep-tex: true
    equal-margins: false
    include-in-header: header.tex
    citecolor: NavyBlue
    linkcolor: NavyBlue
    toccolor: NavyBlue
    urlcolor: NavyBlue
    affiliations:
      - name: Massachusetts General Hospital Research Institute, Charlestown, MA
        id: 1
        department: Molecular Pathology Unit
        city: Charlestown
        state: MA
        postal-code: 02129
      - name: Harvard Medical School, Charlestown, MA
        id: 2
        department: Massachusetts General Hospital Cancer Center
        city: Charlestown
        state: MA
        postal-code: 02129
      - name: Massachusetts General Hospital, Boston, MA
        id: 3
        department: Center for Regenerative Medicine
        city: Boston
        state: MA
        postal-code: 02114
      - name: Harvard University, Cambridge, MA
        id: 4
        department: Harvard Stem Cell Institute
        city: Cambridge
        state: MA
        postal-code: 02139
      - name: Cambridge, MA
        id: 5
        department: Broad Institute of MIT and Harvard
        city: Cambridge
        state: MA
        postal-code: 02142
      - name: Laboratory of Neurodevelopmental Systems Biology, Lausanne, Switzerland
        id: 6
        department: |
          Brain and Mind Institute, School of Life Sciences, 
          École Polytechnique Fédérale de Lausanne (EPFL)
        city: Lausanne
        state: Switzerland
        postal-code: 1015
      - name: Cambridge, MA
        id: 7
        department: Basis Research Institute
        city: Cambridge
        state: MA
        postal-code: 02142
  html:
    code-fold: true
    html-math-method: mathjax
    affiliations:
      - name: Molecular Pathology Unit, Massachusetts General Hospital Research Institute, Charlestown, MA
        id: 1
      - name: Massachusetts General Hospital Cancer Center, Harvard Medical School, Charlestown, MA
        id: 2
      - name: Center for Regenerative Medicine, Massachusetts General Hospital, Boston, MA
        id: 3
      - name: Harvard Stem Cell Institute, Harvard University, Cambridge, MA
        id: 4
      - name: Broad Institute of MIT and Harvard, Cambridge, MA
        id: 5
      - name: Laboratory of Neurodevelopmental Systems Biology, Brain and Mind Institute, School of Life Sciences, École Polytechnique Fédérale de Lausanne (EPFL), Lausanne, Switzerland
        id: 6
      - name: Basis Research Institute, Cambridge, MA
        id: 7
  docx:
    reference-doc: styles.docx
    cite-method: citeproc
    filters:
      - authors-block
    affiliations:
      - name: Molecular Pathology Unit, Massachusetts General Hospital Research Institute, Charlestown, MA
        id: 1
      - name: Massachusetts General Hospital Cancer Center, Harvard Medical School, Charlestown, MA
        id: 2
      - name: Center for Regenerative Medicine, Massachusetts General Hospital, Boston, MA
        id: 3
      - name: Harvard Stem Cell Institute, Harvard University, Cambridge, MA
        id: 4
      - name: Broad Institute of MIT and Harvard, Cambridge, MA
        id: 5
      - name: Laboratory of Neurodevelopmental Systems Biology, Brain and Mind Institute, School of Life Sciences, École Polytechnique Fédérale de Lausanne (EPFL), Lausanne, Switzerland
        id: 6
      - name: Basis Research Institute, Cambridge, MA
        id: 7
csl: _extensions/sciexp/nature/csl/springer-mathphys-brackets.csl
authors:
  - name: Qian Qin
    affiliations:
      - ref: 1
      - ref: 2
      - ref: 3
      - ref: 4
      - ref: 5
    # attributes:
    #   equal-contributor: true
  - name: Eli Bingham
    affiliations:
      - ref: 5
      - ref: 7
  - name: Gioele La Manno
    affiliations:
      - ref: 6
    email: gioele.lamanno@epfl.ch
    attributes:
      corresponding: true
  - name: David M. Langenau
    affiliations:
      - ref: 1
      - ref: 2
      - ref: 3
      - ref: 4
    email: dlangenau@mgh.harvard.edu
    attributes:
      corresponding: true
  - name: Luca Pinello
    affiliations:
      - ref: 1
      - ref: 2
      - ref: 5
    email: lpinello@mgh.harvard.edu
    attributes:
      corresponding: true
abstract: |
  Single-cell RNA velocity has dramatically advanced our ability to model
  cellular differentiation and cell fate decisions. However, current
  preprocessing choices and model assumptions often lead to errors in assigning
  developmental trajectories. Here, we develop, Pyro&thinsp;-Velocity, a Bayesian,
  generative, and multivariate RNA Velocity model to estimate the uncertainty of
  cell future states. This approach models raw sequencing counts with the
  synchronized cell time across all expressed genes to provide quantifiable and
  improved information on cell fate choices and developmental trajectory
  dynamics.
keywords: [
  RNA velocity, 
  single-cell RNA sequencing, 
  probabilistic generative modeling, 
  cell fate, 
  developmental trajectory inference
]
bibliography: bibliography.bib
crossref:
  fig-prefix: Fig.
  sec-prefix: Sec.
  custom:
    - kind: float
      key: extfig
      latex-env: suppfig
      caption-prefix: Extended Data Fig.
      reference-prefix: Extended Data Fig.
      space-before-numbering: true
      latex-list-of-description: Extended Data Figure
---

{{< pagebreak >}}

# Main text {#sec-main .unnumbered}

RNA velocity is a powerful computational framework to estimate the time
derivative of gene expression
[@La_Manno2018-lj;@Svensson2018-vk;@Qiu2022-dj;@Bergen2020-pj]. The framework
has been used to study developmental cell lineage trajectories over a broad
spectrum of biological processes, such as  haematopoiesis [@Qiu2022-dj],
pancreas development [@Bastidas-Ponce2019-lf], and neural progenitors
differentiation [@Bergen2020-pj]. Yet, recent state-of-the-art RNA Velocity
approaches such as velocyto and scVelo [@La_Manno2018-lj] have several
limitations. First, they may predict developmental trajectories that do not
exist in nature, as it has been shown in the analysis of fully mature blood
cells [@Zheng2017-bz;@Bergen2021-qz]. Second, data preprocessing steps (e.g.,
selection of top variable genes, dimensionality reduction) affect velocity
estimates that are difficult to characterize and might lead to artifactual
predictions. In addition, non-linear spliced and unspliced imputation procedures
could distort phase portrait geometry and recovered trajectories
([@fig-model]a). Third, most RNA velocity algorithms perform estimates
independently for each gene, and therefore cannot exploit the natural
interdependence of gene expression. Fourth, a unified description of the
temporal relation between cells can only be assigned based on postprocessing
steps that aggregate heuristically the gene-wise fits into a shared latent time
([@fig-model]a). Finally, current RNA velocity frameworks only output point
estimates of the velocity vector field and do not provide uncertainty
estimation. Importantly, the absence of statistical confidence estimates
increases false discoveries as it leaves users without a way to evaluate the
robustness of the methods' outputs. To overcome these limitations, we developed
a probabilistic generative model, named *Pyro&thinsp;-Velocity*, that estimates
RNA dynamics and infers cell trajectories using Pyro [@Bingham2018-id], a robust
and efficient probabilistic programming language.

Pyro&thinsp;-Velocity recasts the velocity estimation problem into a latent
variable posterior probability inference ([Methods](#sec-methods)). The proposed
model is generative and fully Bayesian, with the different parameters considered
as latent random variables. Each parameter is assigned a prior distribution, and
the model is then conditioned on the raw data (both spliced and unspliced
molecule raw counts) to estimate posterior probability distributions and to
enable uncertainty estimation of velocity. Central to the Pyro&thinsp;-Velocity
model is a *shared latent time* $(t)$: a global latent variable placing each
cell at a particular instant of the modeled dynamical process. From this latent
time, the expectation of spliced and unspliced RNA levels for each gene can be
computed knowing gene-specific kinetics parameters (transcriptional $(\alpha)$,
splicing $(\beta)$, and degradation rates ($\gamma$) and two gene-specific
switching times $(t_{0}^{k})$, and gene-specific transcriptional state $k$) and
integrating the RNA velocity differential equations analogously to what proposed
in the dynamical RNA velocity model by Bergen et al.
[@Bergen2020-pj;@Li2021-qa]. However, we innovate the structure and formulation
of the latent time given that our model is set to jointly fit the entire raw
data matrix, not individual genes. We approach the task of estimating the
posterior distribution by restricting the search within a family of a
variational distribution approximating the true posterior, and taking advantage
of the automatic differentiation variational inference (ADVI) capabilities of
Pyro [@Bingham2018-id;@Kucukelbir2016-bk] ([@fig-model]a,
[Methods](#sec-methods)). Notably, our generative Bayesian model enables to
sample from the posterior distributions of the latent and dependent variables,
allowing uncertainty estimation of phase portraits, high dimensional velocity
vector field, and shared latent time. Around this model, we built several
visualizations to assess uncertainty and functions to recover putative cell fate
priming genes and to investigate how the denoised gene expression recapitulates
known cell-type annotations and their developmental order ([@fig-model]b,
[Methods](#sec-methods)). Although several RNA velocity methods
[@Gayoso2024-fz;@Gorin2022-il;@Gu2022-rh;@Cui2022-em;@Gao2022-jq] have been
recently proposed, here we showcase the advantages and innovations of
Pyro&thinsp;-Velocity by comparing it with the current state-of-the-art
dynamical RNA velocity model proposed by Bergen et al. [@Bergen2020-pj], and
implemented in scVelo.

One major biological hurdle for current formulations of RNA Velocity models has
been miscalling cell trajectories in fully differentiated cell populations that
lack dynamic cell state transitions. One typical example being human peripheral
blood mononuclear cells (PBMCs) [@Zheng2017-bz]. In this dataset, 65,877 cells
were analyzed using the 10x platform that comprised 11 fully differentiated,
mature immune cell types. This dataset lacked stem and progenitor cells or other
signatures of an undergoing dynamical differentiation; thus, no consistent
velocity flow should be detected. We reanalyzed this dataset using scVelo and
Pyro&thinsp;-Velocity using a common set of genes for a fair comparison. Using
scVelo, we reproduced the original results showing incorrect cell trajectory
assignments ([@fig-model-results]a) [@Bergen2021-qz]. ScVelo uncovered an
errant, strong linear trajectory across a subset of mature cell types
[@Zheng2017-bz] that is exasperated by the inability to confidently assess
lineage directionality or a baseline to assess significance. On the contrary,
Pyro&thinsp;-Velocity failed to detect high-confidence trajectories in the
mature blood cell states, consistent with what is known about the biology
underlying these cells ([@fig-model-results]a, panel 2 vs. panel 3).
Importantly, the Bayesian nature of Pyro&thinsp;-Velocity enabled the generation
of uncertainty estimates that can be easily visualized as likely vectors for
individual cells or averaged across cells on a constantly spaced grid on the
cell embedding (*averaged vector field*).

Pyro&thinsp;-Velocity was also able to define well-known developmental cell
hierarchies in a scRNA-seq dataset of E15.5 mouse pancreas
([@fig-model-results]b-e, $n=3,696$ cells comprising $8$ cell types
([@fig-model-results]b, panel 1)), identifying cell trajectories originating
from ductal progenitor cells and culminated in the production of mature Alpha,
Beta, Delta, and Epsilon cells [@Bastidas-Ponce2019-lf]. Though the scVelo and
Pyro&thinsp;-Velocity models have qualitatively comparable vector fields, the
results generated by scVelo were greatly influenced by gene selection,
neighboring cell number for gene expression smoothing, and cannot provide
confidence assessment of lineage directionality ([@extfig-model-results]a). In
addition, Pyro&thinsp;-Velocity uncertainty visualizations uncovered that
differentiated cells had a larger vector field uncertainty than stem and
progenitor cells, as would be expected for terminally differentiated cell states
where progression and lineage trajectories would not be anticipated.
Pyro&thinsp;-Velocity also recovered a developmental order in close agreement
with what was estimated by Cytotrace (Spearman's $r=0.95, \; \text{p-value} <
10^{-10}$ between latent time and developmental order)[@Gulati2020-xq] - a
state-of-the-art orthogonal method used to predict cell differentiation based on
the number of expressed genes per cell.

We next used Pyro&thinsp;-Velocity to unbiasedly uncover potential cell fate
determinant markers genes within the E15.5 mouse pancreas. To this end, we first
selected the top 300 genes with the best goodness of fit (negative mean absolute
errors across cells). Next, we ranked them based on the positive (or negative)
correlation between inferred shared time and corresponding denoised spliced
expression per cell ([@fig-model-results]d, [Methods](#sec-methods)). This procedure
successfully recovered key developmental genes that are activated (or repressed)
during endocrinogenesis ([@fig-model-results]d-e, @extfig-model-results). Among
the top positively correlated genes identified by Pyro&thinsp;-Velocity,
endocrine Beta cells expressed insulin 1 and 2 (Ins1, Ins2) and Nnat, which is a
key regulator Beta cell insulin generation [@Millership2018-vd] and Ppp1r1a
which is a marker of Beta cells [@Jiang2013-pt]. The ranking procedure proposed
by scVelo failed to identify Ins1, Ins2, Nnat, and Ppp1r1a as lineage-restricted
genes in their top 50 ranked gene list. The inability of scVelo to identify
these key developmental genes could be likely explained by the kNN smoothing of
read count and filtering steps (Supplementary Table 1, 2). Visual inspection of
these four top genes by Pyro&thinsp;-Velocity revealed a single activation phase
during cell type transitions based on phase portrait curves. We also propose
their visualization through ``rainbow plots'' to illustrate denoised single gene
spliced expression across shared time and to investigate the inferred cell order
based on known annotations. Further, UMAP embedding of cells colored based on
denoised gene expression confirmed the cell fate markers' smooth and progressive
activation (or repression) towards endocrine cells ([@fig-model-results]e,
[@extfig-model-results]).

Ground truth velocity is not a quantity we can easily assess. Therefore, no
robust and quantitative benchmarking of RNA velocity methods has been proposed.
However, recent single-cell assays allow recording lineage relationships and can
be used to assess the ability of different methods in recapitulating cell fate
progression. Therefore, we next systematically compared scVelo and
Pyro&thinsp;-Velocity ability to recover single cell fates in Lineage And RNA
RecoverY (LARRY) barcoded hematopoietic cells. LARRY leverages unique lentiviral
barcodes inserted into 3' untranslated region (UTR) of GFP reporter that is
integrated as a single copy into parental cells. Then progeny can be clonally
traced to follow the descendent cell fates over time. LARRY has been recently
applied to in vitro differentiation of human blood and accurately recovered
expected cell fate and lineage trajectories [@Weinreb2020-mv]. This dataset
sampled differentiation over the course of 2, 4, and 6 days and contained
$49,302$ cells that each could be traced with at least one barcode. Because
LARRY couples single-cell transcriptomics and direct cell lineage tracing, this
data set provides a unique opportunity to benchmark RNA Velocity quantitatively
and to provide insights into the correct interpretation of recovered velocity
vector fields and latent cell times. To quantitatively assess the agreement
between observed and predicted fates, we considered two metrics: 1. average
cosine similarity (cs) between vectors from the RNA Velocity vector field and
the clonal progression vector field, i.e., a vector field derived directly from
the lineage data ([Methods](#sec-methods)), 2. Spearman's correlation $(\rho)$
between cell latent (shared) time and fate potency scores derived from Cytotrace
and Cospar. Cospar, our gold standard, is a state-of-the-art method designed
explicitly for predicting fate potency based on LARRY data, while Cytotrace
leverages only transcriptomic data. We selected cell state changes associated
with monocyte and neutrophil lineages because both lineages have the largest
numbers of cells in the scRNA sequencing data set and well-known cell fate
trajectories [@Petukhov2018-nr]. As expected, the Pyro&thinsp;-Velocity vector
field accurately predicted cell state trajectories from hematopoietic progenitor
cells into mature monocytes or neutrophils and had high cosine similarity
between the inferred vector field and clonal progression vector field assigned
by LARRY (monocytes $cs=0.49$, neutrophils $cs=0.38$).  High Spearman's
correlation was also seen between shared latent time and Cospar fate potency
(monocytes $\rho=0.60$, neutrophils $\rho=0.74$) or shared latent time with
Cytotrace fate potency (monocytes $\rho=0.925$, neutrophils $\rho=0.925$). By
contrast, scVelo generated vector fields with reversed order or low correlation
(cosine similarity: $-0.38$, monocytes, cosine similarity: $0.32$, neutrophils).
Moreover, Cospar fate potency scores were negative ($\rho=-0.59$, monocytes) or
non-significantly correlated ($\rho=-0.07$, neutrophils).  A similar low
correlation was observed for scVelo and Cytotrace fate potency scores (monocytes
$\rho=0.309$, neutrophils $\rho=0.751$) ([@fig-lineage-tracing]a-b,
[@extfig-lineage-tracing]c).

Next, we evaluated the ability of the Pyro&thinsp;-Velocity models to recover
bi-fate or multi-fate trajectories by considering clones belonging to monocyte
and neutrophil lineages or using the entire dataset. Not surprisingly, both
methods showed their limitations, given that they are not designed to model and
capture multiple fate trajectories ([@extfig-lineage-tracing-2]c-d). The
recovered vector fields and cell latent (shared) time show inconsistent
directions for both methods. However, Pyro&thinsp;-Velocity identified higher
uncertainty for some of the problematic regions. Furthermore, we discovered that
vector field and shared time estimation could be significantly improved by
extending the original kinetic model by allowing each gene a time lag for the
transcriptional activation and a baseline expression level potentially different
than 0 (Pyro&thinsp;-Velocity Model 2, [Methods](#sec-methods))
([@fig-lineage-tracing]c,d, [@extfig-graphical-models]b,c). This extended model
recapitulated a vector field consistent with the clonal progression vector field
for most branches with some spurious predictions within the intermediate cell
state between stem cells and Megakaryocytes and most terminal Neutrophils
(bi-fate cosine similarity: $0.62$, multi-fate cosine similarity: $0.63$).
However, the proposed uncertainty estimation accurately flagged these
subpopulations to warn users of potential false discoveries. Notably, this
extended model significantly improved the correlation of cell shared time with
the clonal fate potency (bi-fate $\rho=0.65$, multi-fate $\rho=0.74$) and also
improved the correlation with Cytotrace fate potency (bi-fate $\rho=0.931$,
multi-fate $\rho=0.614$). Remarkably, the shared time per cell from
Pyro&thinsp;-Velocity also outperformed Cytotrace for developmental order
prediction ([@extfig-lineage-tracing]a,c). Importantly, this extended model
retained its ability to accurately identify cell lineage trajectories and shared
time for all the other datasets analyzed above ([@extfig-model-2-result]). Taken
together, our approach using LARRY barcoded datasets established the first
quantitative benchmark of RNA velocity-based cell fate trajectory inference and
provides an exciting new framework for continued optimization of multi-fate
predictions in the future.

In conclusion, Pyro&thinsp;-Velocity provides the first probabilistic,
interpretable, end-to-end Bayesian inference framework for RNA Velocity that
learns cell dynamics and recovers cell fate from multimodal raw read counts.
This approach provides uncertainty estimations of cell fate trajectories and
novel visualization approaches to mitigate false discoveries.
Pyro&thinsp;-Velocity recovered shared time and vector fields that are
recapitulated in true developmental order and outperformed state-of-the-art
methods like Cytotrace and scVelo ([@extfig-lineage-tracing]a).

# References {.unnumbered}

:::{#refs}
:::

\FloatBarrier
{{< pagebreak >}}

\onecolumn

# Figures

::: {#fig-model}
![](figures/v2/Figure1.pdf){width=98%}

Pyro&thinsp;-Velocity is a fully generative Bayesian method with uncertainty
estimation of velocity vector fields and shared latent time, based on raw counts
and without ad-hoc preprocessing steps. **a**, Schematic comparing current RNA
Velocity and Pyro&thinsp;-Velocity workflows. Both methods take in input spliced
and unspliced read count tables and output RNA velocity vector fields and latent
(shared) time. Previous methods require ad-hoc preprocessing steps, including
the arbitrary selection of top variable genes, number of principal components,
and kNN-pooling to impute both spliced and unspliced expression within the
PCA-reduced spliced expression space. In addition, manually tuned ad-hoc
postprocessing steps are used to compute the final vector field and latent time
based on aggregation and smoothing of the independent velocity estimates for
each gene which can dramatically change the velocity estimates. In contrast,
Pyro&thinsp;-Velocity is a fully generative and probabilistic model that uses
raw read counts. Our model requires minimal preprocessing and postprocessing
steps and outputs a common shared time based on all the genes without additional
aggregation steps. It also provides uncertainty estimation based on posterior
samples. **b**, The main outputs of the Pyro&thinsp;-Velocity framework.
Visualization of single gene expression across inferred developmental cell order
using rainbow plots (right panel).
:::

::: {#fig-model-results}
![](figures/v2/Figure2.png){width=98%}

Pyro&thinsp;-Velocity outperforms other RNA-velocity methods and accurately
predicts cell lineage trajectories. **a,b**, RNA Velocity model comparisons from
fully mature peripheral blood mononuclear cells (PBMCs, t-SNE embedded plots, a)
or E15.5 mouse pancreas (UMAP embedded plots, **b-c**).  From left to right in
panels **a** and **b**: 1. Cells colored by cell type; 2. Stream plot of velocity vector
field defined by scVelo; 3. Stream plot of the posterior mean vector field from
Pyro&thinsp;-Velocity; 4. Pyro&thinsp;-Velocity visualization of cell dynamics
for 3 arbitrarily selected single cells; 5. Single-cell vector field uncertainty
where each cell is colored based on the scaled angular standard deviation to
visualize uncertainty based on n=30 iterated, posterior samples depicted as
arrows noted throughout our analysis; 6. Averaged vector field uncertainty where
each vector is colored by the averaged vector field uncertainty. The scaled
angular standard deviation range is [0 360], where 0 corresponds to the highest
confidence for a single direction, 360 corresponds to the highest uncertainty,
and no directionality preference based on 30 posterior samples (4-6). Vectors
were projected into the UMAP space using the scVelo API based on cosine
similarity-derived transition matrix. **c**, UMAP embedded cells colored by the
average cell shared time across 30 posterior samples. The Spearman's correlation
between Pyro&thinsp;-Velocity and Cytotrace is provided. **d**,
Pyro&thinsp;-Velocity automatic gene selection and ranking for predicting
important genes involved in pancreas development. **e**, Phase portraits of
posterior samples average spliced and unspliced gene expression (left), rainbow
plots showing denoised spliced gene expression (middle), and gene expression
within UMAP embedded space.  Single dots correspond to individual cells (left,
right) or vertical lines (middle). Cell type annotation coloring is the same as
in **b**.
:::

::: {#fig-lineage-tracing}
![](figures/v2/Figure3.png){width=98%}

Pyro&thinsp;-Velocity accurately predicts cell fate choices and lineage
trajectory in human LARRY barcoded hematopoietic cells. Systematic benchmarking
of cell fate prediction methods - predicting uni-lineage cell fates (**a-b**, Model
1), bifurcated lineages (**c**, Model 2), or all lineages together (**d**, Model 2).
Panels from left to right show on the same SPRING embedding: 1. Cell types; 2.
Clonal progression vector field derived based on the observed clonal barcodes
([Methods](#sec-methods)); 3. scVelo recovered vector field; 4. Pyro&thinsp;-Velocity single
cell level vector field uncertainty (angular standard deviation from 30
posterior samples);
5. Pyro&thinsp;-Velocity recovered vector field; vectors are colored by the
averaged vector field uncertainty; 6. Clonal fate potency score using Cospar
[@Wang2022-xb]; 7. scVelo recovered latent time; 8. Pyro&thinsp;-Velocity
inference of posterior mean shared time per cell. Cosine similarity and
Spearman's correlation for the different methods with the clonal progression and
fate potency are reported in the titles.
:::

\FloatBarrier
\clearpage
{{< pagebreak >}}

\twocolumn

# Methods {#sec-methods}

## Model formulation {#sec-methods-model}

We assume the dynamical gene expression is determined by the RNA splicing
process, and infer the unspliced and spliced gene expression level from the
ordinary differential equation (ODEs) proposed in velocyto [@La_Manno2018-lj] and scVelo
[@Bergen2020-pj]
\begin{equation}
  \label{eq-rna}
\begin{aligned}
\frac{du}{dt} &= \alpha(t) - \beta u, \quad u(0) = u_0 \\
   \frac{ds}{dt} &= \beta u - \gamma s, \quad s(0) = s_0,
\end{aligned}
\end{equation}
where $u(t), s(t)$ are the unspliced and spliced expression levels of a gene at time $t$ under a transcription rate $\alpha(t)$ with possible temporal dependence, splicing rate $\beta$, and degradation rate $\gamma$. We specify this model to a setting that depends on cell $c$ and gene $g$ as follows:
\begin{equation}
    \label{eq-rna-cg}
\begin{aligned}
\frac{du_{cg}}{dt} &= \alpha_{cg}(t) - \beta_{g} u_{cg}, \quad u_{cg}(0) = u_{cg}^{(0)} \\
   \frac{ds_{cg}}{dt} &= \beta_{g} u_{cg} - \gamma_{g} s_{cg}, \quad s_{cg}(0) = s_{cg}^{(0)} .
\end{aligned}
\end{equation}
In the equation, the subscript $c$ is the cell dimension, $g$ is the gene dimension,
$\left( u_{cg}(t), s_{cg}(t) \right)$ 
are the unspliced and spliced expression functions given the
change of time per cell and gene.
We restrict attention to piecewise-constant $\alpha_{cg}(t)$ to capture gene-specific activation and repression. We take special care to model a gene- and cell-specific switching time that marks a single transition from activation to repression by introducing a Bernoulli variable $k_{cg}$ to model unknown transcription state. We assume our cell-by-gene data-matrix arrive as observations of Poisson-counts related to the solution of the above ODEs at unknown times, which is modeled as a relationship between an unknown latent time shared across each cell, $t_c$, and unknown gene-specific time-offsets $t_{0,g}$ where all read counts for a single cell occurred at an unknown, but shared latent time $t_c$. These relative times are also used to parametrize the Bernoulli process for $k_{cg}$. 
Importantly, we recognize that the initial conditions are, in fact, unknown.

We propose and study two models: Model 1 assumes that spliced and unspliced concentrations are both 0 at time 0; Model 2 considers these initial conditions as unknowns with a log-Normal prior distribution. In general, the solution space of ODEs becomes much richer when considered over a domain of initial conditions (as opposed to a single point); indeed, this affords Model 2 much greater expressivity. For clarity, we first present the generative framework for both models, then provide further interpretation and intuition. 

First, we introduce the generative model that describes the various unobserved times:
\begin{align}
  % unit lognormal t_c
  t_c &\sim \text{LogNormal}(0, 1) \\
  % gene-specific t_0
  t^{(0)}_{0,g} &\sim \text{LogNormal}(0, 1) \\
  % switching time
  \Delta \textrm{switching}_g &\sim \text{LogNormal}(0, 1) \\
  % gene-specific t_1
  t^{(1)}_{0,g} &= t^{(0)}_{0,g} + \Delta \textrm{switching}_g \\
  %cell-gene-specific activation state
  k_{cg} &\sim \text{Bernoulli}(\textrm{logits}=t_c - t^{(1)}_{0,g}) \\
  % cell-gene-specific latent time
  \tau_{cg} &= \text{softplus}(t_c - t^{(k_{cg})}_{0,g}).
\end{align}
Here, $\tau_{cg}$ represents the displacement of time per
cell and gene with 
\begin{align}
 \text{softplus}(t) :=  \log( 1 + e^t).
\end{align}
Recall that $t_c$ is the shared time per cell, $t^{(k_{cg})}_{0,g}$ is the
gene-specific switching time. Each cell and gene combination has its
transcriptional state $k_{cg} \in \{ 0, 1 \}$, where $0$ indicates the
activation state and $1$ indicates the expression state. Each gene has two
switching times for representing activation and repression: $t^{(0)}_{0,g}$ is
the first switching time corresponding to when the gene expression starts to be
activated, $t^{(1)}_{0,g}$ is the second switching time corresponding to when
the gene expression starts to be repressed, and is determined by the first
switching time and the gene-specific switching time $\Delta \text{switching}_g$.
The cell-gene-specific activation state $k_{cg}$ is a Bernoulli random variable
with logits equal to the difference between the cell's shared time $t_c$ and the time $t^{(1)}_{0,g}$ when the gene expression starts to be repressed.


Next we introduce the priors for the splicing parameters (where the activation rate $\alpha$ depends on the activation state $k_{cg}$ from above):
\begin{align*}
  \alpha^{(0)}_g &\sim \text{LogNormal}(0, 1) \\
  \beta_g &\sim \text{LogNormal}(0, 1) \\
  \gamma_g &\sim \text{LogNormal}(0, 1) \\
  \alpha_{cg} &= \begin{cases}
    \alpha^{(0)}_g & \text{if } k_{cg} = 0 \\
    0 & \text{if } k_{cg} = 1.
  \end{cases}
\end{align*}

Now, we describe the priors for the initial conditions, noting that these define the difference between Model 1 and Model 2, given respectively
\begin{align*}
  &\left(\hat{u}^{(0)}_{cg}, \hat{s}^{(0)}_{cg}\right) \sim 
  \begin{cases}
    (0, 0) \\
    (\text{LogNormal}(0, 1), \text{LogNormal}(0, 1))
  \end{cases}
\end{align*}
where
\begin{align*}
  &\left(u^{(0)}_{cg}, s^{(0)}_{cg}\right) = \\
  &\hskip 3pt \begin{cases}
    \hat{u}^{(0)}_{cg}, \hat{s}^{(0)}_{cg} & \text{if } k_{cg} = 0 \\
    \textrm{ODESolve}\Big( \hat{u}^{(0)}_{cg}, \hat{s}^{(0)}_{cg}, \alpha^{(0)}_g, \beta_g, \gamma_g; \\
    \hskip 24pt T_0=0, T_1=\Delta \textrm{switching}_g \Big) & \text{if } k_{cg} = 1
  \end{cases}
\end{align*}

We define the ODE solution at time $\tau_{cg}$ as:
\begin{align}
    \hat{u}_{cg}, \hat{s}_{cg} = \text{ODESolve}\Big( u^{(0)}_{cg}, & s^{(0)}_{cg}, \alpha_{cg}, \beta_g, \gamma_g; \nonumber \\
    & T_0=0, T_1=\tau_{cg} \Big). \label{eq-ODE-solve}
\end{align}

Next, we define the observation model that gives rise to the observed counts as:
\begin{align}
  \mu^{(u)}_c &= \sum_{g=1}^G {u}^{\text{(obs)}}_{cg}, \quad \mu^{(s)}_c = \sum_{g=1}^G {s}^{\text{(obs)}}_{cg} \\
  \sigma^{(u)}_c &= \sqrt{\frac{1}{G} \sum_{g=1}^G \left( u_{cg}^{\text{(obs)}} - \mu^{(u)}_c \right)^2} \\
  \sigma^{(s)}_c &= \sqrt{\frac{1}{G} \sum_{g=1}^G \left( s_{cg}^{\text{(obs)}} - \mu^{(s)}_c \right)^2} \\
  \eta^{(u)}_c &\sim \text{Normal}\Big(\mu^{(u)}_c, \ \sigma^{(u)}_c\Big) \\
  \eta^{(s)}_c &\sim \text{Normal}\Big(\mu^{(s)}_c, \ \sigma^{(s)}_c\Big) \\
  \hat{\mu}^{(u)}_c &= \sum_{g=1}^G \hat{u}_{cg}, \quad \hat{\mu}^{(s)}_c = \sum_{g=1}^G \hat{s}_{cg} \\
  \lambda^{(u)}_{cg} &= \log(\hat{u}_{cg}) + \log(\eta^{(u)}_{c}) - \log(\hat{\mu}^{(u)}_c) \\
  \lambda^{(s)}_{cg} &= \log(\hat{s}_{cg}) + \log(\eta^{(s)}_{c}) - \log(\hat{\mu}^{(s)}_c) \\
  \hat{u}^{\text{(obs)}}_{cg} &\sim \text{Poisson}\Big(\exp (\lambda^{(u)}_{cg})\Big)   \label{eq-u-hat-obs} \\
  \hat{s}^{\text{(obs)}}_{cg} &\sim \text{Poisson}\Big(\exp (\lambda^{(s)}_{cg})\Big) \label{eq-s-hat-obs}
\end{align}
Here, we use ${u}^{\text{(obs)}}_{cg}, {s}^{\text{(obs)}}_{cg}$ to denote the observed unspliced and spliced counts
for cell $c$ and gene $g$. We use $\hat{u}^{\text{(obs)}}_{cg}, \hat{s}^{\text{(obs)}}_{cg}$ to
denote our generative model's prediction of these unspliced and spliced expression levels.
The generative process for modeling these observed read counts given denoised gene transcript expression level $\hat{u}_{cg}, \hat{s}_{cg}$ considers the expected number of observed reads for a given gene in a given cell as the number of transcripts times the ratio of the cell's total reads to total transcripts.

The linear ODE in Eq. \ref{eq-rna} has an analytic solution under the assumption that the transcription rate $\alpha(t)$ is piece-wise constant, and is derived by the authors of scVelo and a theoretical RNA velocity study
[@Bergen2020-pj;@Li2021-qa].
For brevity, we present the solution under constant transcription rate $\alpha(t) = \alpha_0$, and note that this can be combined to assemble the solution in the piece-wise constant case.
First, let $C = u_0 - \frac{\alpha}{\beta}$. Then, the solution to the ODE in Eq. \ref{eq-rna} is:
\begin{equation}
\label{eq-rna-solution}
\begin{aligned}
  &u(t) = \frac{\alpha}{\beta} + C e^{-\beta t} \\
  &s(t) = 
  \begin{cases}
    \frac{\alpha}{\gamma} + \frac{\beta}{\gamma - \beta} C e^{-\beta t} \\
    \hskip 12pt + \Big(s_0 - \frac{\alpha}{\gamma} - \frac{\beta}{\gamma - \beta} C\Big) e^{-\gamma t} & \text{if } \beta \neq \gamma \\
    \frac{\alpha}{\beta} \Big(s_0 - \frac{\alpha}{\beta} + \beta C t\Big) e^{-\beta t} & \text{if } \beta = \gamma.
  \end{cases}
\end{aligned}
\end{equation}
These solutions are the essential building block used to compute all cell-gene-specific ODE solutions for the unspliced and spliced expression levels in the generative model.

## Variational inference {#sec-methods-inference}

Given observations $\tilde{X}_{cg} = \left( u_{cg}^{\text{(obs)}}, s_{cg}^{\text{(obs)}} \right)$ over cells $1 \dots C$ and genes $1 \dots G$,
we would like to compute the posterior distribution over the random variables $\theta := \left( \theta_1, \ \dots, \theta_C \right)$ and $\psi := \left( \psi_1, \ \dots, \psi_G \right)$, where
\begin{align}
\theta_c &= \left( t_{c}, \eta_{c}^{(u)}, \eta_{c}^{(s)} \right), \\
\phi_g &= \left( {t_{0,g}^{(0)}}, \Delta \text{switching}_{g}, 
          \alpha^{(0)}_{g}, \beta_{g}, \gamma_{g} \right),
\end{align}
but exact Bayesian inference is intractable in this model. We use Pyro to
automatically integrate out the local discrete latent variables $k$, which is
defined as the cell and gene transcriptional state (see above), and approximate
the posterior over the remaining latent variables using variational inference
[@Bingham2018-id;@Kucukelbir2016-bk], which converts intractable integrals into
optimization problems that can be solved with off-the-shelf tools. In
variational inference, we maximize a tractable bound (the evidence lower bound
(ELBO)) on the Kullback-Leibler (KL) divergence
$$
\text{KL}\left( q_{\phi}(\theta, \psi) \mathrel{\Vert} 
  p(\theta, \psi \vert \tilde{X}_{cg}) \right)
$$
between a parametric family of tractable probability distributions q and the
intractable true posterior
\begin{align}
\varphi^* &= \operatorname{argmax}_{\varphi} \text{ELBO} \nonumber \\
&= \operatorname{argmax}_{\varphi} \bigg\{ E_{q_{\varphi}} 
     \bigg[ \log \left(p\left(\tilde{X}_{c g}, \theta, \psi \right) \right) \nonumber\\
&\qquad\qquad\qquad\qquad -\log \left(q_{\varphi}(\theta, \psi)\right) \bigg] \bigg\}
\end{align}
We approximate our model's posterior distribution $p( \theta, \psi \vert
\tilde{X})$ with a tractable family of probability distributions
$q_{\psi}(\theta, \phi) = q_{\phi_1}(\theta) q_{\phi_2}(\psi)$, where
$q_{\phi_1}(\theta)$ is a product of independent univariate Gaussian
distributions with learnable location and scale parameters and
$q_{\phi_2}(\psi)$ is a multivariate Gaussian distribution with a learnable
location parameter and a learnable low-rank covariance matrix. We solve the
resulting stochastic optimization problem using a version of Automatic
Differentiation Variational Inference (ADVI) [@Kucukelbir2016-bk]: we obtain
gradient estimates by differentiating a Monte Carlo estimate of the ELBO and
update the variational parameters  using stochastic gradient ascent.  Our
implementation and experiments use generic variational families and Monte Carlo
ELBO and gradient estimators provided by Pyro [@Bingham2018-id], an open source
library for probabilistic machine learning, and a version built into Pyro of the
adaptive stochastic gradient ascent algorithm Adam augmented with gradient
clipping to enhance numerical stability during training.

## Model training {#sec-methods-training}

For the pancreas, PBMC, and uni-fate and bi-fate LARRY single-cell data, since
the data dimension is relatively small, we run Model 1 and Model 2 with a
minimum of 100 epochs and a maximum of 4000 epochs. For each epoch, we input
spliced and unspliced read counts from all the cells and determine the
convergence condition with an early stopping strategy in which the patience is
set to 45 and consumes one patience if the minimal ELBO improvement of training
data per epoch is lower than $10^{-4}$ of previous loss. The learning rate is
set to be $10^{-2}$ with a decay rate of $0.11/4000$  per epoch. For the
multi-fate LARRY dataset, since this is a large dataset with over $4 \times
10^4$ cells, we use mini batches of cells to train Model 1 and Model 2 with a
minimum of 100 epochs and a maximum of 1000 epochs. Specifically, the batch size
was set to 4000 cells for both models with an early stopping patience 45 and
consume one patience if the minimal ELBO improvement of training data per epoch
lower than $10^{-3}$ of previous loss. The learning rate is set to be $10^{-2}$
with a decay rate of $0.11/1000$  per epoch. All models were trained on a
machine with an NVIDIA A100 GPU and the CentOS 7 operating system.

## Posterior prediction {#sec-methods-posterior-prediction}

To benchmark Pyro&thinsp;-Velocity performance in predicting cell fate, we
generated posterior samples of quantitites of interest in the model.
In particular, we focus on posterior samples of $i)$ spliced and unspliced gene expression across all cells and genes, defined in Eq. \ref{eq-ODE-solve} and denoted by
$X_{cg}=\left(u_{cg}, s_{cg} \right)$ (used for phase portraits and vector-field-based
trajectory inference),
$ii)$ read counts, defined in Eqs. \ref{eq-u-hat-obs} and \ref{eq-s-hat-obs} and denoted by
$\hat{X}^{\text{(obs)}}_{cg}=\left(\hat{u}^{\text{(obs)}}_{cg}, \hat{s}^{\text{(obs)}}_{cg} \right)$
(used for gene selection),
and
$iii)$ RNA velocity, defined in Eq. \ref{eq-ds-cg} as the time derivative of the spliced expression, denoted by
$v_{cg}=\frac{ds_{cg}}{d t}(X_{cg})$.
We generate 30 Monte Carlo samples from the posterior predictive distribution
$X, \hat{X}^{(\text{obs})}, v \sim p(X, \hat{X}^{(\text{obs})}, v \vert \theta, \psi) p(\theta, \psi) \approx q_{\phi}(\theta, \psi)$ 
by sampling the posterior distribution of $\theta$, $\psi$ using the trained model.
We use these samples to compute statistics on the posterior predictive distribution of our quantities of interest; these statistics are used to evaluate the model's performance and uncertainty in predicting cell fate.

## Prioritization of cell fate markers {#sec-methods-fate-markers}

We prioritize the cell fate markers using two metrics: First, the Pearson
correlation between each gene's posterior mean of the denoised spliced
expression and posterior mean of the shared time; Second, the negative mean
absolute errors of each gene's observed spliced, and unspliced read counts with
posterior predictive samples of spliced and unspliced raw read counts, i.e.
$\mathcal{E}_g = \frac{1}{NC} \sum_{i=1}^N \sum_{c=1}^{C} \vert \tilde{X}_{cg} - \hat{X}_{cg}^{(\text{obs}), (i)} \vert$, where we use $N=30$ Monte Carlo samples. We first select the top $300$ genes with the
highest negative mean absolute errors and then rank the $300$ genes based on the
most positively correlated genes and the least negatively correlated genes. We
use the same strategy for scVelo to rank the markers by the model likelihood to
get the top 300 genes and then prioritize these genes by Pearson's correlation
between scVelo latent time and normalized expression.

## Single-cell data preprocessing {#sec-methods-preprocessing}

We used scanpy and scVelo to handle the data input and output; thus, both h5ad
and loom files generated by velocyto and kallisto [@Melsted2021-ap] are
supported. The fully mature PBMC dataset was processed with the same procedure
proposed in a review paper [@Bergen2021-qz]
(<https://scvelo.readthedocs.io/perspectives/Perspectives/>). We reproduced this
procedure using the scVelo package and raw read counts of the same top three
dynamical genes NKG7, IGHM, and GNLY with the best likelihoods. The pancreas
dataset was processed with scVelo using the following options

```python
import scvelo

scvelo.pp.filter_and_normalize(
  adata=adata,
  min_shared_counts=30, 
  n_top_genes=2000,
)
scvelo.pp.moments(
  adata,
  n_pcs=30,
  n_neighbors=30,
)
```

The same top variable genes with raw spliced and unspliced read counts were used
as input for the Pyro&thinsp;-Velocity model. The original LARRY dataset of in
vitro Hematopoiesis containing $130,887$ cells was first filtered to remove
cells without LARRY barcoding. $49,302$ cells were recovered after this step
with at least one LARRY barcode. For simplicity, we termed this filtered dataset
with multiple cell fate (multi-fate) as the full dataset. Based on this dataset,
we created two datasets with uni-fate progression toward monocyte or neutrophil
based on the lineage LARRY barcodes and time information. Namely, we selected
sets of cells with a single LARRY barcode, spanning three time points (day 2, 4,
6), and all the cells from the last time point (day 6) belong to a unique cell
type (either monocyte or neutrophil). The two uni-fate datasets were combined to
represent the bi-fate LARRY dataset. The multi-fate full dataset was processed
using the same options as the pancreas dataset; the rest of the uni-fate and
bi-fate datasets were processed using the following parameters

```python
scvelo.pp.filter_and_normalize(
  adata=adata,
  n_top_genes=2000,
  min_shared_counts=20,
)
scvelo.pp.moments(adata)
```

## scVelo model {#sec-methods-scvelo}

We benchmarked the dynamical RNA velocity model implemented in scVelo `v0.2.4`
for the pancreas and the four LARRY datasets using the same user options

```python
scvelo.tl.recover_dynamics(
  data=adata, 
  n_jobs=30,
)
scvelo.tl.velocity(
  data=adata, 
  mode="dynamical",
)
```

Then, we tested a set of user options, including the neighboring cell numbers
and the top variable gene numbers, in the pancreas dataset to explore the
stability of the scVelo dynamical model. For the fully mature PBMC dataset, we
followed the notebook proposed by the original authors
<https://scvelo.readthedocs.io/perspectives/Perspectives/>, i.e., we used the
stochastic RNA velocity model implemented in scVelo with the top three
likelihood genes. The latent time from scVelo was computed using their provided
function

```python
scvelo.tl.latent_time(
  data=adata,
)
```

## Trajectory inference {#sec-methods-trajectory-inference}

### Velocity vector field

The velocity-based vector fields were generated using the scVelo function call

```python
scvelo.tl.velocity_graph(adata)
scvelo.tl.velocity_embedding(
  adata, 
  vkey='velocity',
  basis='embed',
)
```

We used the default options for projecting the vector fields from scVelo models.
Unlike scVelo, Pyro&thinsp;-Velocity uses statistics derived from posterior samples of
the denoised spliced gene expression and posterior samples of the velocity
estimation for building the cell state transition matrix estimates using cosine
similarity. Pyro&thinsp;-Velocity uses the same projection method as scVelo for
projecting the transition matrix into the two-dimensional vector field on the
user-provided embedding space.

### Clonal progression vector field

No method exists for projecting clonal cell fates from the LARRY data and
associated subsets thereof into a vector field. Thus, we designed a strategy for
projecting clonal progression vector fields. Given cells sharing the same LARRY
barcode, we considered the vectors connecting the embedding centroid of cells at
consecutive time points and then leveraged Gaussian smoothing of nearest
centroid directions to represent the clonal progression vector field informed by
LARRY barcodes on a regular grid over the cell manifold.

## Cell fate uncertainty estimation {#sec-methods-fate-uncertainty}

Pyro&thinsp;-Velocity evaluates cell fate uncertainty using four statistics. The
first is the uncertainty of shared time, which is evaluated using the standard
deviation of posterior samples of $t_c$ for each cell. The second statistic is
the angular standard deviation [@Berens2009-fu] across posterior samples of the
velocity-based vector field. The value of this statistic was mapped linearly to
the range $[0, 360]$ for interpretability. The third statistic is the Rayleigh
test [@The-Astropy-Collaboration2022-aw] for posterior samples of the
velocity-based vector fields for each cell, whose p-values have been corrected
for multiple tests using Benjamini-Hochberg FDR methods; if FDR is less than
$0.05$, the cell is considered to have one statistically significant future
direction. The second and third circular statistics were implemented using the
Astropy package (`v5.1`) [@The-Astropy-Collaboration2022-aw]. The last statistic
is state uncertainty which evaluates the mean Euclidean distance between
posterior mean and posterior samples of the raw read count prediction for each
cell
\begin{align*}
\mathcal{U}_c = \frac{1}{N} \sum_{i=1}^N \sqrt{\sum_{g=1}^G \left(\hat{X}^{\text{(obs)},(i)}_{cg} - \frac{1}{N}\sum_{i=1}^N \hat{X}^{\text{(obs)},(i)}_{cg}\right)^2}
\end{align*}
with $N=30$ Monte Carlo samples.

## Cospar {#sec-methods-cospar}

We computed the
[Cospar `v0.1.9`](https://github.com/AllonKleinLab/cospar/releases/tag/v0.1.9)
[@Wang2022-xb] fate potency score for the above processed multi-fate LARRY dataset,
and selected the subset of the fate potency scores for evaluating bi-fate and
uni-fate datasets. We used the following function calls to achieve this

```python
cospar.tmap.infer_Tmap_from_multitime_clones(
  adata_orig=adata, 
  compute_new=True,
  clonal_time_points=[2,4,6], 
  later_time_point=6,
  smooth_array=[20,15,10],
  sparsity_threshold=0.2, 
  max_iter_N=3
)
cospar.pl.fate_potency(
  adata=adata, 
  used_Tmap='transition_map',
  map_backward=True,
  method='norm-sum',
  color_bar=True,
  fate_count=True
)
```

## Cytotrace model {#sec-methods-cytotrace}

We implemented Cytotrace in Python based on the R version [@Gulati2020-xq] for
benchmarking Pyro&thinsp;-Velocity and scVelo's shared (latent) time prediction in the
Python environment. This implementation is available in the
[Pyro&thinsp;-Velocity GitHub repository][cytotrace].

[cytotrace]: https://github.com/pinellolab/pyrovelocity/blob/main/src/pyrovelocity/analysis/cytotrace.py

## Model evaluation and selection {#sec-methods-model-selection}

Pyro&thinsp;-Velocity provides two model formulations as described above.
Users can compare their predictive performance to decide which of the two models
to use for a given dataset. Namely, the mean absolute errors of posterior
samples prediction of spliced and unspliced raw read counts $x_{icg}$ from its
observation $\tilde{X}_{cg}$ per gene and cell combinations
\begin{align*}
\frac{1}{N C G} \sum_{i=1}^{N} \sum_{c=1}^{C} \sum_{g=1}^{G} 
  \vert X^{\text{(obs), (i)}}_{cg} - \tilde{X}_{cg} \vert,
\end{align*}
where $i$ is the posterior sample index, $N$ is the posterior sample number,
$C$ is the cell number, $G$ is the gene number. Then it is possible to
evaluate the cell fate inference performance of the models based on two metrics:

1. the consistency between the velocity vector field and the *clonal progression
vector field* using grid-based cosine similarity; 2. Spearman's correlation of
velocity-based shared (latent) time with Cospar fate potency and the silver
standard Cytotrace score. Both metrics are implemented in scipy.

# Data availability

All the data presented in this manuscript were collected from previously
published studies. The fully mature PBMC, pancreas datasets are downloaded and
loaded through the scVelo using `scvelo.datasets.pancreas()`, and
`scvelo.datasets.pbmc68k()`. The LARRY inDrop sequencing data was processed by
the LARRY authors using dropEst [@Petukhov2018-nr] and velocyto. This dataset
can be accessed at
<https://figshare.com/articles/dataset/larry_invitro_adata_sub_raw_h5ad/20780344>.

# Code availability

We developed our Pyro&thinsp;-Velocity models with Pyro (version 1.6.0)
probabilistic programming language and PyTorch (version 1.8.1).
Pyro&thinsp;-Velocity source code is available at
<https://github.com/pinellolab/pyrovelocity>. The version of
Pyro&thinsp;-Velocity (v0.1.0) used to generate the results presented in this
manuscript has been deposited on Zenodo:
<https://zenodo.org/record/7072876#.Yx-2e-zMLxg>.

<!-- # End notes {.unnumbered} -->

# Acknowledgments {.unnumbered}

This project has been made possible in part by grant number 2022-249212 from
the Chan Zuckerberg Initiative DAF, an advised fund of Silicon Valley Community
Foundation. L.P. received support from the U.S. NIH (R35 HG010717) and Silicon
Valley Community Foundation (2022-249212). D.M.L is supported by R01CA226926,
R01 CA215118, R01CA154923, R24 OD031955, CureSearch Acceleration Initiative, and
the MGH Scholars Award. We thank the Pinello and Langenau labs members for
helpful discussions.

# Author contributions {.unnumbered}

L.P., Q.Q., and E.B. conceived the work. Q.Q. and E.B created the software. Q.Q.
analyzed the data, and prepared the figures and tables. L.P and D.L. supervised
the project.  L.P., D.L., E.B., G.L.M helped in designing experiments and
analyses.  All the authors contributed to the writing of the manuscript.

# Competing financial interests statement {.unnumbered}

L.P. has financial interests in Edilytics, Inc., Excelsior Genomics, and SeQure
Dx, Inc. L.P.'s interests were reviewed and are managed by Massachusetts General
Hospital and Partners HealthCare in accordance with their conflict of interest
policies.

\FloatBarrier
\clearpage
{{< pagebreak >}}

\onecolumn

# Extended Data Figures

::: {#extfig-graphical-models}
![](figures/v2/Supplementary-Figure1.pdf){width=98%}

Graphical representations detail the generative process of the
Pyro&thinsp;-Velocity models and highlight their differences. **a**,
Pyro&thinsp;-Velocity Model 1. Each rectangle represents one data dimension
(e.g., gene or cell). The arrows represent the directed hierarchical dependency
among random variables. The white circles correspond to the modeled random
variables. The probability distributions of these variables are denoted on the
right legend. The gray circles correspond to intermediate results computed from
random variables. In this model, the kinetics random variables for the cell
shared time and gene are modeled with two constraints: 1. the shared time is
strictly larger than the gene-specific activation time $t_{0}^{(0)}$, 2. the
gene expression in the activate state starts with the initial condition
$(u_{0}=0,\,s_{0}=0)$, as in previous methods[@La_Manno2018-lj;@Bergen2020-pj]
([Methods](#sec-methods)). **b**, Pyro&thinsp;-Velocity Model 2. This figure
follows the same graphical convention as in **a**, In this model $t_{0}^{(0)}$
is independent from the shared time, thus allowing a time lag for the gene
activation phase. In addition, a positive starting basal gene expression level
$(u_{0},\,s_{0})$ different than $(u_{0}=0,\,s_{0}=0)$ is allowed.
([Methods](#sec-methods)). **c**, Schematic illustrating how the constraints
proposed in Model 1 (left) and Model 2 (right) are reflected in the modeling of
individual gene expression. The x-axis corresponds to the shared time, the
y-axis corresponds to the posterior mean of the spliced expression level, the
vertical lines with arrows show the start and end time of the observed cell
sampling, t0 represents the gene-specific activation time $t_{0}^{(0)}$, the red
lines highlight the differences for the potential gene-specific time lag when
$t_{0}^{(0)} > {\min}\!⁡(t)$, and the initial spliced gene expression. The same
differences can also be illustrated for the unspliced gene expression profiles
(not shown).
:::

::: {#extfig-model-results}
![](figures/v2/Supplementary-Figure2.png){width=98%}

Extended version of @fig-model-results for evaluating Pyro&thinsp;-Velocity
(Model 1) and scVelo on the PBMC and pancreas datasets. **a**, Left figure shows
the scVelo vector field using the default user options, right figure shows the
evaluation of the scVelo vector field using different combinations of user
options within Epsilon cells. **b**, Pyro&thinsp;-Velocity additional single
cell level uncertainty diagnostic plots on the fully mature PBMC dataset, from
left to right: 1. standard deviation of posterior samples of shared time, 2.
Rayleigh test of posterior samples of the vector field (the title reports false
discovery rate after p-value correction for multiple tests across cells), 3.
transcriptional state uncertainty of predicted raw read count per cell. The
contour lines show the top 10% of the most uncertain cells. **c**, For the
pancreas dataset, the figures show from left to right: UMAP rendering of 1.
Cytotrace, 2. scVelo latent time, 3. Posterior mean of Pyro&thinsp;-Velocity
shared time averaged across 30 posterior samples, 4. Top 50 markers overlapping
between Pyro&thinsp;-Velocity and scVelo ([Methods](#sec-methods), Supplementary
Table 1-2), 5. The same uncertainty diagnostic plots per cell as in **b**.
**d**, The same plot as [@fig-model-results]d, e. Selection of the top
negatively correlated genes with the cell shared time based on the posterior
mean on denoised spliced expression and negative mean absolute error of gene
expression prediction ([Methods](#sec-methods)). **f**, Phase portraits, rainbow
plots, and UMAP rendering of posterior mean of gene expression for the genes
selected in **e**.
:::

::: {#extfig-model-2-result}
![](figures/v2/Supplementary-Figure3.png){width=98%}

Extension of @fig-model-results, Pyro&thinsp;-Velocity (Model 2) outperforms
scVelo on PBMC and pancreas datasets. Same format as in @fig-model-results and
@extfig-model-results.
:::

::: {#extfig-lineage-tracing}
![](figures/v2/Supplementary-Figure4.png){width=98%}

Extension of @fig-lineage-tracing, Pyro&thinsp;-Velocity (Model 1 for uni-fate
data, Model 2 for bi-fate and multi-fate data) outperforms Cytotrace on
scRNA-seq datasets with lineage barcoding information (LARRY dataset). **a**,
SPRING embedding rendering of Cytotrace scores, the title reports the Spearman's
correlation between the Cytotrace and Cospar fate potency scores, **b**,
Pyro&thinsp;-Velocity additional single cell level uncertainty diagnostic plots
based on the multi-fate LARRY dataset, from left to right: 1. Standard deviation
of posterior samples of shared time per cell, 2. Rayleigh test of posterior
samples of vector field per cell (the title reports the false discovery rate
after p-value correction for multiple tests across cells), 3. Transcriptional
state uncertainty of predicted raw read count per cell. The contour lines show
the top 10% of the most uncertain cells ([Methods](#sec-methods)), **c**,
Pairwise Spearman's correlation between Cytotrace/Cospar fate potency scores and
velocity methods for the four different benchmarking datasets selected based on
the lineage barcoding information from LARRY data, **d**, SPRING embedding
rendering of posterior mean of shared time across 30 posterior samples, the
title shows the Spearman's correlation of mean shared time with Cytotrace.
**e**, Selection of the top positively correlated genes with the cell shared
time based on the posterior mean of spliced expression. **f**, Phase portraits,
rainbow plots, and UMAP rendering with splicing gene expression level for the
genes selected in **e**.
:::

::: {#extfig-lineage-tracing-2}
![](figures/v2/Supplementary-Figure5.png){width=98%}

Extension of [@fig-lineage-tracing] presenting an extended comparison of
Pyro&thinsp;-Velocity and scVelo on scRNA-seq datasets with lineage barcoding
information (LARRY dataset). **a**, uni-fate Monocyte lineage analysis with
Pyro&thinsp;-Velocity Model 2, **b**, uni-fate Neutrophil lineage analysis with
Pyro&thinsp;-Velocity Model 2, **c**, Neutrophil and Monocyte bi-fate lineage
analysis with Pyro&thinsp;-Velocity Model 1, and **d**, multi-fate lineage analysis
with Pyro&thinsp;-Velocity Model 1. The panel descriptions are the same as in
[@fig-lineage-tracing].
:::

<!-- ![An example figure (an empty plot)](figures/fig.pdf){#extfig-plot} -->

<!-- \begin{table}[h]
\caption{LaTeX caption text}\label{tbl-data}%
\begin{tabular}{@{}llll@{}}
\toprule
Column 1 & Column 2  & Column 3 & Column 4\\
\midrule
row 1    & data 1   & data 2  & data 3  \\
row 2    & data 4   & data 5\footnotemark[1]  & data 6  \\
row 3    & data 7   & data 8  & data 9\footnotemark[2]  \\
\botrule
\end{tabular}
\footnotetext{Source: This is an example of table footnote. This is an example of table footnote.}
\footnotetext[1]{Example for a first table footnote. This is an example of table footnote.}
\footnotetext[2]{Example for a second table footnote. This is an example of table footnote.}
\end{table} -->

<!-- # Supporting Information {.appendix} -->
