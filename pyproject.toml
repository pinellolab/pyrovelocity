[tool.poetry]
name = "pyrovelocity"
version = "0.1.2"
description = "A multivariate RNA Velocity model to estimate future cell states with uncertainty using probabilistic modeling with pyro."
authors = ["Qian Qin <qqin@mgh.harvard.edu>"]
license = "AGPL-3.0-only"
readme = "README.md"
homepage = "https://github.com/pinellolab/pyrovelocity"
repository = "https://github.com/pinellolab/pyrovelocity"
documentation = "https://pyrovelocity.readthedocs.io"
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU Affero General Public License v3",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]

[tool.poetry.urls]
Changelog = "https://github.com/pinellolab/pyrovelocity/releases"

[tool.poetry.dependencies]
# required
adjusttext = "~0.7.3"
anndata = "0.8.0"
astropy = "5.2.2"
click = ">=8.0.1"
colorlog = "^6.7.0"
cospar = { version = "0.1.9", source = "pypi" }
desert = ">=2022.9.22"
h5py = "3.8.0"
hydra-core = "1.3.2"
hydra-zen = ">=0.10.0"
leidenalg = "0.9.1"
marshmallow = ">=3.18.0"
mlflow = "2.2.2"
omegaconf = "2.3.0"
pandas = "1.5.3"
pyro-ppl = "1.8.3"
python = ">=3.9, <3.11"
pytorch-lightning = "1.9.4"
rich = "^12.6.0"
scikit-misc = "0.1.4"
scipy = "1.10.1"
scvelo = "0.2.5"
scvi-tools = "0.20.3"
seaborn = { version = "0.11.2", source = "pypi" }
termcolor = "^2.2.0"
torch = "1.13.1"
torchmetrics = "0.11.4"

# extras
Pygments = { version = ">=2.15.0", optional = true }
black = { version = ">=23.3.0", optional = true }
coverage = {extras = ["toml"], version = ">=6.2", optional = true}
darglint = { version = ">=1.8.1", optional = true }
flake8 = { version = ">=4.0.1", optional = true }
flake8-bandit = { version = ">=2.1.2", optional = true, source = "pypi" }
flake8-bugbear = { version = ">=21.9.2", optional = true }
flake8-docstrings = { version = ">=1.6.0", optional = true }
flake8-rst-docstrings = { version = ">=0.2.5", optional = true }
furo = { version = ">=2023.3.27", optional = true }
ipython = {version = ">=8.11.0", optional = true}
isort = { version = ">=5.10.1", optional = true }
mypy = { version = ">=0.930", optional = true }
pep8-naming = { version = ">=0.12.1", optional = true }
pre-commit = { version = ">=2.16.0", optional = true }
pre-commit-hooks = { version = ">=4.1.0", optional = true }
pytest = { version = ">=6.2.5", optional = true }
pyupgrade = { version = ">=2.29.1", optional = true }
safety = { version = ">=1.10.3", optional = true }
sphinx = { version = ">=6.1.3", optional = true }
sphinx-autobuild = { version = ">=2021.3.14", optional = true }
sphinx-click = { version = ">=4.4.0", optional = true }
typeguard = { version = ">=2.13.3", optional = true }
xdoctest = {extras = ["colors"], version = ">=0.15.10", optional = true }
myst-parser = {version = ">=1.0.0", optional = true}
dparse = { version = ">=0.5.2", optional = true }
pytest-cov = { version = ">=4.0.0", optional = true }
pytest-mock = { version = ">=3.10.0", optional = true }
poethepoet = { version = ">=0.16.0", optional = true, source = "pypi" }
dvc-gs = { version = ">=2.20.0", optional = true }
jupyter-core = { version = ">=5.1.3", optional = true, source = "pypi" }
pyvis = { version = ">=0.3.2", optional = true }
hypothesis = {version = ">=6.71.0", optional = true }

[tool.conda-lock.dependencies]
seaborn = { version = "0.11.2", source = "conda-forge" }
jupyter_core = { version = ">=5.1.3", source = "conda-forge" }


[tool.conda-lock]
channels = [
    'conda-forge', 'bioconda', 'nodefaults'
]
platforms = [
    'linux-64',
    'osx-arm64',
    'osx-amd64'
]

[tool.poetry.extras]
dev = [
 "Pygments",
 "black",
 "coverage",
 "darglint",
 "flake8",
 "flake8-bandit",
 "flake8-bugbear",
 "flake8-docstrings",
 "flake8-rst-docstrings",
 "furo",
 "hypothesis",
 "isort",
 "ipython",
 "mypy",
 "pep8-naming",
 "pre-commit",
 "pre-commit-hooks",
 "pytest",
 "pyupgrade",
 "pyvis",
 "safety",
 "sphinx",
 "sphinx-autobuild",
 "sphinx-click",
 "typeguard",
 "xdoctest",
 "myst-parser",
 "dparse",
 "pytest-cov",
 "pytest-mock",
 "poethepoet",
 "dvc-gs",
 "jupyter-core"
 ]


# [tool.poetry.group.dev]
# optional = true

# [tool.poetry.group.dev.dependencies]

[tool.poetry.scripts]
pyrovelocity = "pyrovelocity.pyrovelocity:main"

# WORKAROUND: see EOF
# only on Linux and Windows
# https://github.com/python-poetry/poetry/issues/2613#issuecomment-799693903
# $ poetry install
# $ poetry run poe force-cuda11
[tool.poe.tasks]
force-cuda11 = "python -m pip install torch==1.13.1+cu111 --extra-index-url https://download.pytorch.org/whl/cu111"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["pyrovelocity", "tests"]

[tool.coverage.report]
show_missing = true
#fail_under = 100

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = true
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"
